{"version":3,"sources":["DiceRoll.ts","components/TabPanel.tsx","components/Table.tsx","encounters/Monsters.ts","names/NameUtils.ts","encounters/EncountersGenerator.ts","encounters/EncounterUtils.ts","encounters/WeirdEncounters.ts","encounters/CreateEncounter.tsx","components/FeatureButton.tsx","images/battle.png","images/castle.png","images/house.png","encounters/Encounters.tsx","TarokkaCardsUtils.ts","FortunesOfRavenloft.tsx","names/Names.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DiceType","TabPanel","props","children","value","index","other","role","hidden","id","Box","sx","p","Typography","StyledTableCell","styled","TableCell","theme","tableCellClasses","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","TableRow","action","hover","border","MonsterType","roll","qt","type","_roll","v","i","random","min","max","Math","round","barovianFamilyNames","barovianMaleNames","barovianFemaleNames","generateMaleBorovianName","familyName","n1","length","generateFemaleBorovianName","XPDificulty","monsterData","xp","hpRoll","d8","hpModifier","challenge","reference","d10","d12","d20","d6","d4","getMonsterDataFor","monster","undefined","find","m","hp","generateFixedEncounter","monsterType","n","encounterName","gender","res","push","name","generateEncounter","amount","diceType","modifier","blinkToys","cocoonContent","trinkets","unseenServent","randomUnseenServant","randomTrinket","randomCocoonContent","generateHouseOccupants","adults","man","woman","maleChildren","family","generateBarovianFamily","countMan","countWoman","map","generateVallakiHouseEncounter","SwarmofRats","cultists","c","Cultist","CultFanatic","generateVallakiCultists","generateCastleRavenloftEncounter","EsmereldadAvenir","Rahadin","Cat","BroomofAnimatedAttack","FlyingSword","Commoner","CrawlingClaw","Shadow","SwarmofBats","StrahdZombie","Thug","BarovianWitch","VampireSpawn","Strahd","castleRavenloftTable","generateDaytimeEncounter","Scout","Bandit","SwarmofRavens","Wereraven","Wolf","DireWolf","Berserker","Werewolf","foo","Druid","TwigBlight","NeeddleBlight","Scarecrow","Revenant","daytimeEncounterTable","generateNightTimeEncounter","Ghost","Zombie","WillOWisp","nightTimeEncounterTable","generateMaleBarovian","generateFemaleBarovian","maleCount","femaleCount","CreateEncounter","useState","monsterAutocompleteValue","setMonsterAutocompleteValue","monsters","setMonsters","finalXP","setFinalXP","recommendedCombatXP","setRecommendedCombatXP","partyLevels","setPartyLevels","useEffect","calculateXP","difficulties","split","forEach","l","xps","parseInt","EASY","MEDIUM","HARD","DEADLY","ex","console","log","onAutoCompleteChange","event","SearchMonsterBox","Autocomplete","onChange","options","fullWidth","getOptionLabel","option","renderInput","params","TextField","label","calculateAdjustedXP","Grid","container","spacing","item","xs","style","display","Button","onClick","variant","diff","difficulty","TableContainer","component","Paper","Table","minWidth","TableHead","TableBody","scope","href","target","rel","e","FeatureButton","text","icon","CustomButton","flexDirection","width","src","styles","paper","padding","flex","flexItem","marginRight","Encounters","rows","setRows","roadEncounter","setRoadEncounter","dayTimeToggle","setDayTimeToggle","forceEncounter","setForceEncounter","BattleImage","details","dc","row","date","Date","toUTCString","place","day","HouseImage","generateVillageOfBaroviaHouseEncounter","CastleImage","align","d","j","lineHeight","substring","toUpperCase","marginLeft","size","defaultValue","ToggleButtonGroup","exclusive","newValue","ToggleButton","FormGroup","FormControlLabel","control","Checkbox","checked","specialCards","cardSuits","getRandomCard","suit","FortunesOfRavenloft","cards","setCards","readFortuneClick","card","reading","includes","maxWidth","margin","textAlign","Names","maleNameCount","setMaleNameCount","femaleNameCount","setFemaleNameCount","sameFamily","setSameFamily","names","setNames","nameType","setNameType","entry","FormControl","marginBottom","InputLabel","Select","labelId","MenuItem","Slider","step","valueLabelDisplay","newNames","App","React","setValue","window","addEventListener","evt","preventDefault","returnValue","className","borderBottom","borderColor","Tabs","Tab","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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A,E,UAAAA,E,qCAAAA,E,uBAAAA,E,gBAAAA,E,2BAAAA,E,gBAAAA,E,gBAAAA,E,cAAAA,E,gBAAAA,E,YAAAA,E,YAAAA,E,gBAAAA,E,wBAAAA,E,2BAAAA,E,gBAAAA,E,kBAAAA,E,sBAAAA,E,oBAAAA,E,kBAAAA,E,gBAAAA,E,kBAAAA,E,gBAAAA,E,cAAAA,E,oBAAAA,E,qCAAAA,E,YAAAA,E,cAAAA,E,uBAAAA,E,wBAAAA,E,sBAAAA,E,qBAAAA,E,gBAAAA,E,yBAAAA,E,kBAAAA,E,YAAAA,E,yBAAAA,E,UAAAA,E,UAAAA,E,gBAAAA,E,UAAAA,E,kBAAAA,E,kBAAAA,E,kBAAAA,E,2BAAAA,E,qBAAAA,E,oBAAAA,E,4BAAAA,E,iCAAAA,E,uBAAAA,E,YAAAA,E,4BAAAA,E,wBAAAA,E,yBAAAA,E,gBAAAA,E,kBAAAA,E,oBAAAA,E,UAAAA,E,cAAAA,E,wCAAAA,E,uBAAAA,E,oBAAAA,E,wBAAAA,E,2BAAAA,E,UAAAA,E,cAAAA,E,oCAAAA,E,2BAAAA,E,wCAAAA,E,oBAAAA,E,wBAAAA,E,cAAAA,E,oBAAAA,E,iBAAAA,E,qBAAAA,E,gBAAAA,E,iCAAAA,E,iCAAAA,E,oBAAAA,E,8CAAAA,E,oBAAAA,E,cAAAA,E,sBAAAA,E,kBAAAA,E,gBAAAA,E,yBAAAA,E,gBAAAA,E,2BAAAA,E,gBAAAA,E,yBAAAA,E,yBAAAA,E,yBAAAA,E,4BAAAA,E,4BAAAA,E,kCAAAA,E,mDAAAA,E,oCAAAA,E,4BAAAA,E,gCAAAA,E,sBAAAA,E,cAAAA,E,gBAAAA,E,0BAAAA,E,cAAAA,E,yBAAAA,E,qCAAAA,E,kBAAAA,E,kBAAAA,E,6BAAAA,E,6BAAAA,E,cAAAA,E,kBAAAA,E,oBAAAA,E,qCAAAA,E,iCAAAA,E,gBAAAA,E,oBAAAA,E,oBAAAA,E,kBAAAA,E,sBAAAA,E,oBAAAA,E,4CAAAA,E,cAAAA,E,8BAAAA,E,yBAAAA,E,YAAAA,E,YAAAA,E,gBAAAA,E,gBAAAA,E,YAAAA,E,gBAAAA,E,sBAAAA,E,+BAAAA,E,oBAAAA,E,sBAAAA,E,+BAAAA,E,2CAAAA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","file":"static/js/main.6a324c1e.chunk.js","sourcesContent":["export enum DiceType {\n  d4 = 4,\n  d6 = 6,\n  d8 = 8,\n  d10 = 10,\n  d12 = 12,\n  d20 = 20,\n  d100 = 100\n}\n\nexport const roll = (qt: number, type: DiceType) => {\n  return _roll(qt, type)();\n}\n\nexport const _roll = (qt: number, type: DiceType) => {\n\n  return () => {\n    let v = 0;\n\n    for (let i = 0; i < qt; i++)\n      v += random(1, type);\n\n    return v;\n  }\n}\n\nexport const random = (min: number, max: number) => {\n  return Math.round(Math.random() * (max - min) + min);\n}","import { Box, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nexport interface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nexport const TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n","import { TableCell, tableCellClasses, TableRow } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\n\nexport const StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nexport const StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  // hide last border\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));","import { DiceType, _roll } from \"../DiceRoll\";\n\nexport enum MonsterType {\n  Acolyte = \"Acolyte\", Archmage = \"Archmage\", Assassin = \"Assassin\", Bandit = \"Bandit\", BanditCaptain = \"Bandit Captain\", Berserker = \"Berserker\", Commoner = \"Commoner\", Cultist = \"Cultist\", CultFanatic = \"Cult Fanatic\", Druid = \"Druid\", Gladiator = \"Gladiator\", Guard = \"Guard\", Knight = \"Knight\", Mage = \"Mage\", Noble = \"Noble\", Priest = \"Priest\", Scout = \"Scout\", Spy = \"Spy\", Thug = \"Thug\", TribalWarrior = \"Tribal Warrior\", Veteran = \"Veteran\", Aboleth = \"Aboleth\", AdultBlackDragon = \"Adult Black Dragon\", AdultBlueDragon = \"Adult Blue Dragon\", AdultBrassDragon = \"Adult Brass Dragon\", AdultBronzeDragon = \"Adult Bronze Dragon\", AdultCopperDragon = \"Adult Copper Dragon\", AdultGoldDragon = \"Adult Gold Dragon\", AdultGreenDragon = \"Adult Green Dragon\", AdultRedDragon = \"Adult Red Dragon\", AdultSilverDragon = \"Adult Silver Dragon\", AdultWhiteDragon = \"Adult White Dragon\", AirElemental = \"Air Elemental\", Allosaurus = \"Allosaurus\", AncientBlackDragon = \"Ancient Black Dragon\", AncientBlueDragon = \"Ancient Blue Dragon\", AncientBrassDragon = \"Ancient Brass Dragon\", AncientBronzeDragon = \"Ancient Bronze Dragon\", AncientCopperDragon = \"Ancient Copper Dragon\", AncientGoldDragon = \"Ancient Gold Dragon\", AncientGreenDragon = \"Ancient Green Dragon\", AncientRedDragon = \"Ancient Red Dragon\", AncientSilverDragon = \"Ancient Silver Dragon\", AncientWhiteDragon = \"Ancient White Dragon\", Androsphinx = \"Androsphinx\", AnimatedArmor = \"Animated Armor\", Ankheg = \"Ankheg\", Ankylosaurus = \"Ankylosaurus\", Ape = \"Ape\", AwakenedShrub = \"Awakened Shrub\", AwakenedTree = \"Awakened Tree\", AxeBeak = \"Axe Beak\", Azer = \"Azer\", Baboon = \"Baboon\", Badger = \"Badger\", Balor = \"Balor\", BarbedDevil = \"Barbed Devil\", Banshee = \"Banshee\", Basilisk = \"Basilisk\", Bat = \"Bat\", BeardedDevil = \"Bearded Devil\", Behir = \"Behir\", BlackBear = \"Black Bear\", BlackDragonWyrmling = \"Black Dragon Wyrmling\", BlackPudding = \"Black Pudding\", BlinkDog = \"Blink Dog\", BloodHawk = \"Blood Hawk\", BlueDragonWyrmling = \"Blue Dragon Wyrmling\", Boar = \"Boar\", BoneDevil = \"Bone Devil\", BrassDragonWyrmling = \"Brass Dragon Wyrmling\", BronzeDragonWyrmling = \"Bronze Dragon Wyrmling\", BrownBear = \"Brown Bear\", Bugbear = \"Bugbear\", Bulette = \"Bulette\", Camel = \"Camel\", Cat = \"Cat\", Centaur = \"Centaur\", ChainDevil = \"Chain Devil\", Chimera = \"Chimera\", Chuul = \"Chuul\", ClayGolem = \"Clay Golem\", Cloaker = \"Cloaker\", CloudGiant = \"Cloud Giant\", Cockatrice = \"Cockatrice\", ConstrictorSnake = \"Constrictor Snake\", CopperDragonWyrmling = \"Copper Dragon Wyrmling\", Couatl = \"Couatl\", Crab = \"Crab\", Crocodile = \"Crocodile\", Cyclops = \"Cyclops\", Darkmantle = \"Darkmantle\", DeathDog = \"Death Dog\", Deer = \"Deer\", DeepGnomeSvirfneblin = \"Deep Gnome (Svirfneblin)\", Deva = \"Deva\", Djinni = \"Djinni\", DireWolf = \"Dire Wolf\", Doppelganger = \"Doppelganger\", DraftHorse = \"Draft Horse\", DragonTurtle = \"Dragon Turtle\", Dretch = \"Dretch\", Drider = \"Drider\", Drow = \"Drow\", Dryad = \"Dryad\", Duergar = \"Duergar\", DustMephit = \"Dust Mephit\", Eagle = \"Eagle\", EarthElemental = \"Earth Elemental\", Efreeti = \"Efreeti\", Elephant = \"Elephant\", Elk = \"Elk\", Erinyes = \"Erinyes\", Ettercap = \"Ettercap\", Ettin = \"Ettin\", FireElemental = \"Fire Elemental\", FireGiant = \"Fire Giant\", Flameskull = \"Flameskull\", FleshGolem = \"Flesh Golem\", FlyingSnake = \"Flying Snake\", FlyingSword = \"Flying Sword\", Frog = \"Frog\", FrostGiant = \"Frost Giant\", Gargoyle = \"Gargoyle\", GelatinousCube = \"Gelatinous Cube\", Ghast = \"Ghast\", Ghost = \"Ghost\", Ghoul = \"Ghoul\", GiantApe = \"Giant Ape\", GiantBadger = \"Giant Badger\", GiantBat = \"Giant Bat\", GiantBoar = \"Giant Boar\", GiantCentipede = \"Giant Centipede\", GiantConstrictorSnake = \"Giant Constrictor Snake\", GiantCrab = \"Giant Crab\", GiantCrocodile = \"Giant Crocodile\", GiantEagle = \"Giant Eagle\", GiantElk = \"Giant Elk\", GiantFireBeetle = \"Giant Fire Beetle\", GiantFrog = \"Giant Frog\", GiantGoat = \"Giant Goat\", GiantHyena = \"Giant Hyena\", GiantLizard = \"Giant Lizard\", GiantOctopus = \"Giant Octopus\", GiantOwl = \"Giant Owl\", GiantPoisonousSnake = \"Giant Poisonous Snake\", GiantRat = \"Giant Rat\", GiantScorpion = \"Giant Scorpion\", GiantSeaHorse = \"Giant Sea Horse\", GiantShark = \"Giant Shark\", GiantSpider = \"Giant Spider\", GiantToad = \"Giant Toad\", GiantVulture = \"Giant Vulture\", GiantWasp = \"Giant Wasp\", GiantWeasel = \"Giant Weasel\", GiantWolfSpider = \"Giant Wolf Spider\", Glabrezu = \"Glabrezu\", GibberingMouther = \"Gibbering Mouther\", Gnoll = \"Gnoll\", Goat = \"Goat\", Goblin = \"Goblin\", GoldDragonWyrmling = \"Gold Dragon Wyrmling\", Gorgon = \"Gorgon\", GrayOoze = \"Gray Ooze\", GreenDragonWyrmling = \"Green Dragon Wyrmling\", GreenHag = \"Green Hag\", Grick = \"Grick\", Griffon = \"Griffon\", Grimlock = \"Grimlock\", GuardianNaga = \"Guardian Naga\", Gynosphinx = \"Gynosphinx\", HalfRedDragonVeteran = \"Half-Red Dragon Veteran\", Harpy = \"Harpy\", Hawk = \"Hawk\", HellHound = \"Hell Hound\", Hezrou = \"Hezrou\", HillGiant = \"Hill Giant\", Hippogriff = \"Hippogriff\", Hobgoblin = \"Hobgoblin\", Homunculus = \"Homunculus\", HornedDevil = \"Horned Devil\", HunterShark = \"Hunter Shark\", Hydra = \"Hydra\", Hyena = \"Hyena\", IceDevil = \"Ice Devil\", IceMephit = \"Ice Mephit\", Imp = \"Imp\", InvisibleStalker = \"Invisible Stalker\", IronGolem = \"Iron Golem\", Jackal = \"Jackal\", KillerWhale = \"Killer Whale\", Kobold = \"Kobold\", Kraken = \"Kraken\", Lamia = \"Lamia\", Lemure = \"Lemure\", Lich = \"Lich\", Lion = \"Lion\", Lizard = \"Lizard\", Lizardfolk = \"Lizardfolk\", MagmaMephit = \"Magma Mephit\", Magmin = \"Magmin\", Mammoth = \"Mammoth\", Manticore = \"Manticore\", Marilith = \"Marilith\", Mastiff = \"Mastiff\", Medusa = \"Medusa\", Merfolk = \"Merfolk\", Merrow = \"Merrow\", Mimic = \"Mimic\", Minotaur = \"Minotaur\", MinotaurSkeleton = \"Minotaur Skeleton\", Mule = \"Mule\", Mummy = \"Mummy\", MummyLord = \"Mummy Lord\", Nalfeshnee = \"Nalfeshnee\", Nightmare = \"Nightmare\", NightHag = \"Night Hag\", Nothic = \"Nothic\", OchreJelly = \"Ochre Jelly\", Octopus = \"Octopus\", Ogre = \"Ogre\", OgreZombie = \"Ogre Zombie\", Oni = \"Oni\", Orc = \"Orc\", Otyugh = \"Otyugh\", Owl = \"Owl\", Owlbear = \"Owlbear\", Panther = \"Panther\", Pegasus = \"Pegasus\", PhaseSpider = \"Phase Spider\", PitFiend = \"Pit Fiend\", Planetar = \"Planetar\", Plesiosaurus = \"Plesiosaurus\", PoisonousSnake = \"Poisonous Snake\", PolarBear = \"Polar Bear\", Pony = \"Pony\", Pseudodragon = \"Pseudodragon\", Pteranodon = \"Pteranodon\", PurpleWorm = \"Purple Worm\", Quasit = \"Quasit\", Quipper = \"Quipper\", Rakshasa = \"Rakshasa\", Rat = \"Rat\", Raven = \"Raven\", RedDragonWyrmling = \"Red Dragon Wyrmling\", ReefShark = \"Reef Shark\", Remorhaz = \"Remorhaz\", Rhinoceros = \"Rhinoceros\", RidingHorse = \"Riding Horse\", Roc = \"Roc\", Roper = \"Roper\", RugofSmothering = \"Rug of Smothering\", RustMonster = \"Rust Monster\", SaberToothedTiger = \"Saber-Toothed Tiger\", Sahuagin = \"Sahuagin\", Salamander = \"Salamander\", Satyr = \"Satyr\", Scorpion = \"Scorpion\", SeaHag = \"Sea Hag\", SeaHorse = \"Sea Horse\", Shadow = \"Shadow\", ShamblingMound = \"Shambling Mound\", ShieldGuardian = \"Shield Guardian\", Shrieker = \"Shrieker\", SilverDragonWyrmling = \"Silver Dragon Wyrmling\", Skeleton = \"Skeleton\", Solar = \"Solar\", Spectator = \"Spectator\", Specter = \"Specter\", Spider = \"Spider\", SpiritNaga = \"Spirit Naga\", Sprite = \"Sprite\", SteamMephit = \"Steam Mephit\", Stirge = \"Stirge\", StoneGiant = \"Stone Giant\", StoneGolem = \"Stone Golem\", StormGiant = \"Storm Giant\", Succubus = \"Succubus/Incubus\", SwarmofBats = \"Swarm of Bats\", SwarmofInsects = \"Swarm of Insects\", SwarmofPoisonousSnakes = \"Swarm of Poisonous Snakes\", SwarmofQuippers = \"Swarm of Quippers\", SwarmofRats = \"Swarm of Rats\", SwarmofRavens = \"Swarm of Ravens\", Tarrasque = \"Tarrasque\", Tiger = \"Tiger\", Treant = \"Treant\", Triceratops = \"Triceratops\", Troll = \"Troll\", TwigBlight = \"Twig Blight\", TyrannosaurusRex = \"Tyrannosaurus Rex\", Unicorn = \"Unicorn\", Vampire = \"Vampire\", VampireSpawn = \"Vampire Spawn\", VioletFungus = \"Violet Fungus\", Vrock = \"Vrock\", Vulture = \"Vulture\", Warhorse = \"Warhorse\", WarhorseSkeleton = \"Warhorse Skeleton\", WaterElemental = \"Water Elemental\", Weasel = \"Weasel\", Werebear = \"Werebear\", Wereboar = \"Wereboar\", Wererat = \"Wererat\", Weretiger = \"Weretiger\", Werewolf = \"Werewolf\", WhiteDragonWyrmling = \"White Dragon Wyrmling\", Wight = \"Wight\", WillOWisp = \"Will-o’-Wisp\", WinterWolf = \"Winter Wolf\", Wolf = \"Wolf\", Worg = \"Worg\", Wraith = \"Wraith\", Wyvern = \"Wyvern\", Xorn = \"Xorn\", Zombie = \"Zombie\", Wereraven = \"Wereraven\", NeeddleBlight = \"Needdle Blight\", Revenant = \"Revenant\", Scarecrow = \"Scarecrow\", StrahdZombie = \"Strahd's Zombie\", EsmereldadAvenir = \"Esmerelda d’Avenir\", Rahadin = \"Rahadin\", BroomofAnimatedAttack = \"Broom of Animated Attack\", CrawlingClaw = \"Crawling Claw\", BarovianWitch = \"Barovian Witch\", Strahd = \"Strahd\"\n}\n\nexport interface IMonsterData {\n  type: string;\n  hpRoll?: () => number;\n  hpModifier?: number;\n  challenge?: string;\n  reference: string;\n  hp?: number;\n  name?: string;\n  xp?: number\n}\n\nexport const monsterData: IMonsterData[] = [\n  { xp: 50, type: \"Acolyte\", hpRoll: _roll(2, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Acolyte\" },\n  { xp: 8400, type: \"Archmage\", hpRoll: _roll(18, DiceType.d8), hpModifier: 18, challenge: \"12\", reference: \"https://www.dndbeyond.com/monsters/Archmage\" },\n  { xp: 3900, type: \"Assassin\", hpRoll: _roll(12, DiceType.d8), hpModifier: 24, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Assassin\" },\n  { xp: 25, type: \"Bandit\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Bandit\" },\n  { xp: 450, type: \"Bandit Captain\", hpRoll: _roll(10, DiceType.d8), hpModifier: 20, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Bandit-Captain\" },\n  { xp: 450, type: \"Berserker\", hpRoll: _roll(9, DiceType.d8), hpModifier: 27, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Berserker\" },\n  { xp: 10, type: \"Commoner\", hpRoll: _roll(1, DiceType.d8), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Commoner\" },\n  { xp: 25, type: \"Cultist\", hpRoll: _roll(2, DiceType.d8), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Cultist\" },\n  { xp: 450, type: \"Cult Fanatic\", hpRoll: _roll(6, DiceType.d8), hpModifier: 6, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Cult-Fanatic\" },\n  { xp: 450, type: \"Druid\", hpRoll: _roll(5, DiceType.d8), hpModifier: 5, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Druid\" },\n  { xp: 1800, type: \"Gladiator\", hpRoll: _roll(15, DiceType.d8), hpModifier: 45, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Gladiator\" },\n  { xp: 25, type: \"Guard\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Guard\" },\n  { xp: 700, type: \"Knight\", hpRoll: _roll(8, DiceType.d8), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Knight\" },\n  { xp: 2300, type: \"Mage\", hpRoll: _roll(9, DiceType.d8), hpModifier: 0, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Mage\" },\n  { xp: 25, type: \"Noble\", hpRoll: _roll(2, DiceType.d8), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Noble\" },\n  { xp: 450, type: \"Priest\", hpRoll: _roll(5, DiceType.d8), hpModifier: 5, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Priest\" },\n  { xp: 100, type: \"Scout\", hpRoll: _roll(3, DiceType.d8), hpModifier: 3, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Scout\" },\n  { xp: 200, type: \"Spy\", hpRoll: _roll(6, DiceType.d8), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Spy\" },\n  { xp: 100, type: \"Thug\", hpRoll: _roll(5, DiceType.d8), hpModifier: 10, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Thug\" },\n  { xp: 25, type: \"Tribal Warrior\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Tribal-Warrior\" },\n  { xp: 700, type: \"Veteran\", hpRoll: _roll(9, DiceType.d8), hpModifier: 18, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Veteran\" },\n  { xp: 5900, type: \"Aboleth\", hpRoll: _roll(18, DiceType.d10), hpModifier: 36, challenge: \"10\", reference: \"https://www.dndbeyond.com/monsters/Aboleth\" },\n  { xp: 11500, type: \"Adult Black Dragon\", hpRoll: _roll(17, DiceType.d12), hpModifier: 85, challenge: \"14\", reference: \"https://www.dndbeyond.com/monsters/Adult-Black-Dragon\" },\n  { xp: 15000, type: \"Adult Blue Dragon\", hpRoll: _roll(18, DiceType.d12), hpModifier: 108, challenge: \"16\", reference: \"https://www.dndbeyond.com/monsters/Adult-Blue-Dragon\" },\n  { xp: 10000, type: \"Adult Brass Dragon\", hpRoll: _roll(15, DiceType.d12), hpModifier: 75, challenge: \"13\", reference: \"https://www.dndbeyond.com/monsters/Adult-Brass-Dragon\" },\n  { xp: 13000, type: \"Adult Bronze Dragon\", hpRoll: _roll(17, DiceType.d12), hpModifier: 102, challenge: \"15\", reference: \"https://www.dndbeyond.com/monsters/Adult-Bronze-Dragon\" },\n  { xp: 11500, type: \"Adult Copper Dragon\", hpRoll: _roll(16, DiceType.d12), hpModifier: 80, challenge: \"14\", reference: \"https://www.dndbeyond.com/monsters/Adult-Copper-Dragon\" },\n  { xp: 18000, type: \"Adult Gold Dragon\", hpRoll: _roll(19, DiceType.d12), hpModifier: 133, challenge: \"17\", reference: \"https://www.dndbeyond.com/monsters/Adult-Gold-Dragon\" },\n  { xp: 13000, type: \"Adult Green Dragon\", hpRoll: _roll(18, DiceType.d12), hpModifier: 90, challenge: \"15\", reference: \"https://www.dndbeyond.com/monsters/Adult-Green-Dragon\" },\n  { xp: 18000, type: \"Adult Red Dragon\", hpRoll: _roll(19, DiceType.d12), hpModifier: 133, challenge: \"17\", reference: \"https://www.dndbeyond.com/monsters/Adult-Red-Dragon\" },\n  { xp: 15000, type: \"Adult Silver Dragon\", hpRoll: _roll(18, DiceType.d12), hpModifier: 126, challenge: \"16\", reference: \"https://www.dndbeyond.com/monsters/Adult-Silver-Dragon\" },\n  { xp: 10000, type: \"Adult White Dragon\", hpRoll: _roll(16, DiceType.d12), hpModifier: 96, challenge: \"13\", reference: \"https://www.dndbeyond.com/monsters/Adult-White-Dragon\" },\n  { xp: 1800, type: \"Air Elemental\", hpRoll: _roll(12, DiceType.d10), hpModifier: 24, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Air-Elemental\" },\n  { xp: 450, type: \"Allosaurus\", hpRoll: _roll(6, DiceType.d10), hpModifier: 18, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Allosaurus\" },\n  { xp: 33000, type: \"Ancient Black Dragon\", hpRoll: _roll(21, DiceType.d20), hpModifier: 147, challenge: \"21\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Black-Dragon\" },\n  { xp: 50000, type: \"Ancient Blue Dragon\", hpRoll: _roll(26, DiceType.d20), hpModifier: 208, challenge: \"23\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Blue-Dragon\" },\n  { xp: 25000, type: \"Ancient Brass Dragon\", hpRoll: _roll(17, DiceType.d20), hpModifier: 119, challenge: \"20\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Brass-Dragon\" },\n  { xp: 41000, type: \"Ancient Bronze Dragon\", hpRoll: _roll(24, DiceType.d20), hpModifier: 192, challenge: \"22\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Bronze-Dragon\" },\n  { xp: 33000, type: \"Ancient Copper Dragon\", hpRoll: _roll(20, DiceType.d20), hpModifier: 140, challenge: \"21\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Copper-Dragon\" },\n  { xp: 62000, type: \"Ancient Gold Dragon\", hpRoll: _roll(28, DiceType.d20), hpModifier: 252, challenge: \"24\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Gold-Dragon\" },\n  { xp: 41000, type: \"Ancient Green Dragon\", hpRoll: _roll(22, DiceType.d20), hpModifier: 154, challenge: \"22\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Green-Dragon\" },\n  { xp: 62000, type: \"Ancient Red Dragon\", hpRoll: _roll(28, DiceType.d20), hpModifier: 252, challenge: \"24\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Red-Dragon\" },\n  { xp: 50000, type: \"Ancient Silver Dragon\", hpRoll: _roll(25, DiceType.d20), hpModifier: 225, challenge: \"23\", reference: \"https://www.dndbeyond.com/monsters/Ancient-Silver-Dragon\" },\n  { xp: 25000, type: \"Ancient White Dragon\", hpRoll: _roll(18, DiceType.d20), hpModifier: 144, challenge: \"20\", reference: \"https://www.dndbeyond.com/monsters/Ancient-White-Dragon\" },\n  { xp: 18000, type: \"Androsphinx\", hpRoll: _roll(19, DiceType.d10), hpModifier: 95, challenge: \"17\", reference: \"https://www.dndbeyond.com/monsters/Androsphinx\" },\n  { xp: 200, type: \"Animated Armor\", hpRoll: _roll(6, DiceType.d8), hpModifier: 6, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Animated-Armor\" },\n  { xp: 450, type: \"Ankheg\", hpRoll: _roll(6, DiceType.d10), hpModifier: 6, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ankheg\" },\n  { xp: 700, type: \"Ankylosaurus\", hpRoll: _roll(8, DiceType.d12), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Ankylosaurus\" },\n  { xp: 100, type: \"Ape\", hpRoll: _roll(3, DiceType.d8), hpModifier: 6, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Ape\" },\n  { xp: 10, type: \"Awakened Shrub\", hpRoll: _roll(3, DiceType.d6), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Awakened-Shrub\" },\n  { xp: 450, type: \"Awakened Tree\", hpRoll: _roll(7, DiceType.d12), hpModifier: 14, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Awakened-Tree\" },\n  { xp: 50, type: \"Axe Beak\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Axe-Beak\" },\n  { xp: 450, type: \"Azer\", hpRoll: _roll(6, DiceType.d8), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Azer\" },\n  { xp: 10, type: \"Baboon\", hpRoll: _roll(1, DiceType.d6), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Baboon\" },\n  { xp: 10, type: \"Badger\", hpRoll: _roll(1, DiceType.d4), hpModifier: 1, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Badger\" },\n  { xp: 22000, type: \"Balor\", hpRoll: _roll(21, DiceType.d12), hpModifier: 126, challenge: \"19\", reference: \"https://www.dndbeyond.com/monsters/Balor\" },\n  { xp: 1800, type: \"Barbed Devil\", hpRoll: _roll(13, DiceType.d8), hpModifier: 52, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Barbed-Devil\" },\n  { xp: 1100, type: \"Banshee\", hpRoll: _roll(13, DiceType.d8), hpModifier: 0, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Banshee\" },\n  { xp: 700, type: \"Basilisk\", hpRoll: _roll(8, DiceType.d8), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Basilisk\" },\n  { xp: 10, type: \"Bat\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Bat\" },\n  { xp: 700, type: \"Bearded Devil\", hpRoll: _roll(8, DiceType.d8), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Bearded-Devil\" },\n  { xp: 7200, type: \"Behir\", hpRoll: _roll(16, DiceType.d12), hpModifier: 64, challenge: \"11\", reference: \"https://www.dndbeyond.com/monsters/Behir\" },\n  { xp: 100, type: \"Black Bear\", hpRoll: _roll(3, DiceType.d8), hpModifier: 6, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Black-Bear\" },\n  { xp: 450, type: \"Black Dragon Wyrmling\", hpRoll: _roll(6, DiceType.d8), hpModifier: 6, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Black-Dragon-Wyrmling\" },\n  { xp: 1100, type: \"Black Pudding\", hpRoll: _roll(10, DiceType.d10), hpModifier: 30, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Black-Pudding\" },\n  { xp: 50, type: \"Blink Dog\", hpRoll: _roll(4, DiceType.d8), hpModifier: 4, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Blink-Dog\" },\n  { xp: 25, type: \"Blood Hawk\", hpRoll: _roll(2, DiceType.d6), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Blood-Hawk\" },\n  { xp: 700, type: \"Blue Dragon Wyrmling\", hpRoll: _roll(8, DiceType.d8), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Blue-Dragon-Wyrmling\" },\n  { xp: 50, type: \"Boar\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Boar\" },\n  { xp: 5000, type: \"Bone Devil\", hpRoll: _roll(15, DiceType.d10), hpModifier: 60, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Bone-Devil\" },\n  { xp: 200, type: \"Brass Dragon Wyrmling\", hpRoll: _roll(3, DiceType.d8), hpModifier: 3, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Brass-Dragon-Wyrmling\" },\n  { xp: 450, type: \"Bronze Dragon Wyrmling\", hpRoll: _roll(5, DiceType.d8), hpModifier: 10, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Bronze-Dragon-Wyrmling\" },\n  { xp: 200, type: \"Brown Bear\", hpRoll: _roll(4, DiceType.d10), hpModifier: 12, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Brown-Bear\" },\n  { xp: 200, type: \"Bugbear\", hpRoll: _roll(5, DiceType.d8), hpModifier: 5, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Bugbear\" },\n  { xp: 1800, type: \"Bulette\", hpRoll: _roll(9, DiceType.d10), hpModifier: 45, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Bulette\" },\n  { xp: 25, type: \"Camel\", hpRoll: _roll(2, DiceType.d10), hpModifier: 4, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Camel\" },\n  { xp: 10, type: \"Cat\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Cat\" },\n  { xp: 450, type: \"Centaur\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Centaur\" },\n  { xp: 3900, type: \"Chain Devil\", hpRoll: _roll(10, DiceType.d8), hpModifier: 40, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Chain-Devil\" },\n  { xp: 2300, type: \"Chimera\", hpRoll: _roll(12, DiceType.d10), hpModifier: 48, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Chimera\" },\n  { xp: 1100, type: \"Chuul\", hpRoll: _roll(11, DiceType.d10), hpModifier: 33, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Chuul\" },\n  { xp: 5000, type: \"Clay Golem\", hpRoll: _roll(14, DiceType.d10), hpModifier: 56, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Clay-Golem\" },\n  { xp: 3900, type: \"Cloaker\", hpRoll: _roll(12, DiceType.d10), hpModifier: 12, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Cloaker\" },\n  { xp: 5000, type: \"Cloud Giant\", hpRoll: _roll(16, DiceType.d12), hpModifier: 96, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Cloud-Giant\" },\n  { xp: 100, type: \"Cockatrice\", hpRoll: _roll(6, DiceType.d6), hpModifier: 6, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Cockatrice\" },\n  { xp: 50, type: \"Constrictor Snake\", hpRoll: _roll(2, DiceType.d10), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Constrictor-Snake\" },\n  { xp: 200, type: \"Copper Dragon Wyrmling\", hpRoll: _roll(4, DiceType.d8), hpModifier: 4, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Copper-Dragon-Wyrmling\" },\n  { xp: 1100, type: \"Couatl\", hpRoll: _roll(13, DiceType.d8), hpModifier: 39, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Couatl\" },\n  { xp: 10, type: \"Crab\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Crab\" },\n  { xp: 100, type: \"Crocodile\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Crocodile\" },\n  { xp: 2300, type: \"Cyclops\", hpRoll: _roll(12, DiceType.d12), hpModifier: 60, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Cyclops\" },\n  { xp: 100, type: \"Darkmantle\", hpRoll: _roll(5, DiceType.d6), hpModifier: 5, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Darkmantle\" },\n  { xp: 200, type: \"Death Dog\", hpRoll: _roll(6, DiceType.d8), hpModifier: 12, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Death-Dog\" },\n  { xp: 10, type: \"Deer\", hpRoll: _roll(1, DiceType.d8), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Deer\" },\n  { xp: 100, type: \"Deep Gnome (Svirfneblin)\", hpRoll: _roll(3, DiceType.d6), hpModifier: 6, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Deep-Gnome-Svirfneblin\" },\n  { xp: 5900, type: \"Deva\", hpRoll: _roll(16, DiceType.d8), hpModifier: 64, challenge: \"10\", reference: \"https://www.dndbeyond.com/monsters/Deva\" },\n  { xp: 7200, type: \"Djinni\", hpRoll: _roll(14, DiceType.d10), hpModifier: 84, challenge: \"11\", reference: \"https://www.dndbeyond.com/monsters/Djinni\" },\n  { xp: 200, type: \"Dire Wolf\", hpRoll: _roll(5, DiceType.d10), hpModifier: 10, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Dire-Wolf\" },\n  { xp: 700, type: \"Doppelganger\", hpRoll: _roll(8, DiceType.d8), hpModifier: 16, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Doppelganger\" },\n  { xp: 50, type: \"Draft Horse\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Draft-Horse\" },\n  { xp: 18000, type: \"Dragon Turtle\", hpRoll: _roll(22, DiceType.d20), hpModifier: 110, challenge: \"17\", reference: \"https://www.dndbeyond.com/monsters/Dragon-Turtle\" },\n  { xp: 50, type: \"Dretch\", hpRoll: _roll(4, DiceType.d6), hpModifier: 4, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Dretch\" },\n  { xp: 2300, type: \"Drider\", hpRoll: _roll(13, DiceType.d10), hpModifier: 52, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Drider\" },\n  { xp: 50, type: \"Drow\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Drow\" },\n  { xp: 200, type: \"Dryad\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Dryad\" },\n  { xp: 200, type: \"Duergar\", hpRoll: _roll(4, DiceType.d8), hpModifier: 8, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Duergar\" },\n  { xp: 100, type: \"Dust Mephit\", hpRoll: _roll(5, DiceType.d6), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Dust-Mephit\" },\n  { xp: 10, type: \"Eagle\", hpRoll: _roll(1, DiceType.d6), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Eagle\" },\n  { xp: 1800, type: \"Earth Elemental\", hpRoll: _roll(12, DiceType.d10), hpModifier: 60, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Earth-Elemental\" },\n  { xp: 7200, type: \"Efreeti\", hpRoll: _roll(16, DiceType.d10), hpModifier: 112, challenge: \"11\", reference: \"https://www.dndbeyond.com/monsters/Efreeti\" },\n  { xp: 50, type: \"Elephant\", hpRoll: _roll(8, DiceType.d12), hpModifier: 24, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Elephant\" },\n  { xp: 1100, type: \"Elk\", hpRoll: _roll(2, DiceType.d10), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Elk\" },\n  { xp: 8400, type: \"Erinyes\", hpRoll: _roll(18, DiceType.d8), hpModifier: 72, challenge: \"12\", reference: \"https://www.dndbeyond.com/monsters/Erinyes\" },\n  { xp: 1100, type: \"Ettercap\", hpRoll: _roll(8, DiceType.d8), hpModifier: 8, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ettercap\" },\n  { xp: 450, type: \"Ettin\", hpRoll: _roll(10, DiceType.d10), hpModifier: 30, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Ettin\" },\n  { xp: 1800, type: \"Fire Elemental\", hpRoll: _roll(12, DiceType.d10), hpModifier: 36, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Fire-Elemental\" },\n  { xp: 5000, type: \"Fire Giant\", hpRoll: _roll(13, DiceType.d12), hpModifier: 78, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Fire-Giant\" },\n  { xp: 1800, type: \"Flameskull\", hpRoll: _roll(9, DiceType.d4), hpModifier: 18, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Flameskull\" },\n  { xp: 1100, type: \"Flesh Golem\", hpRoll: _roll(11, DiceType.d8), hpModifier: 44, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Flesh-Golem\" },\n  { xp: 25, type: \"Flying Snake\", hpRoll: _roll(2, DiceType.d4), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Flying-Snake\" },\n  { xp: 50, type: \"Flying Sword\", hpRoll: _roll(5, DiceType.d6), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Flying-Sword\" },\n  { xp: 10, type: \"Frog\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Frog\" },\n  { xp: 3900, type: \"Frost Giant\", hpRoll: _roll(12, DiceType.d12), hpModifier: 60, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Frost-Giant\" },\n  { xp: 450, type: \"Gargoyle\", hpRoll: _roll(7, DiceType.d8), hpModifier: 21, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Gargoyle\" },\n  { xp: 450, type: \"Gelatinous Cube\", hpRoll: _roll(8, DiceType.d10), hpModifier: 40, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Gelatinous-Cube\" },\n  { xp: 450, type: \"Ghast\", hpRoll: _roll(8, DiceType.d8), hpModifier: 0, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ghast\" },\n  { xp: 200, type: \"Ghost\", hpRoll: _roll(10, DiceType.d8), hpModifier: 0, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Ghost\" },\n  { xp: 1100, type: \"Ghoul\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Ghoul\" },\n  { xp: 2900, type: \"Giant Ape\", hpRoll: _roll(15, DiceType.d12), hpModifier: 60, challenge: \"7\", reference: \"https://www.dndbeyond.com/monsters/Giant-Ape\" },\n  { xp: 50, type: \"Giant Badger\", hpRoll: _roll(2, DiceType.d8), hpModifier: 4, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Badger\" },\n  { xp: 450, type: \"Giant Bat\", hpRoll: _roll(4, DiceType.d10), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Bat\" },\n  { xp: 50, type: \"Giant Boar\", hpRoll: _roll(5, DiceType.d10), hpModifier: 15, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Boar\" },\n  { xp: 50, type: \"Giant Centipede\", hpRoll: _roll(1, DiceType.d6), hpModifier: 1, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Centipede\" },\n  { xp: 450, type: \"Giant Constrictor Snake\", hpRoll: _roll(8, DiceType.d12), hpModifier: 8, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Constrictor-Snake\" },\n  { xp: 25, type: \"Giant Crab\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Giant-Crab\" },\n  { xp: 1800, type: \"Giant Crocodile\", hpRoll: _roll(9, DiceType.d12), hpModifier: 27, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Giant-Crocodile\" },\n  { xp: 200, type: \"Giant Eagle\", hpRoll: _roll(4, DiceType.d10), hpModifier: 4, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Eagle\" },\n  { xp: 450, type: \"Giant Elk\", hpRoll: _roll(5, DiceType.d12), hpModifier: 10, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Elk\" },\n  { xp: 10, type: \"Giant Fire Beetle\", hpRoll: _roll(1, DiceType.d6), hpModifier: 1, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Giant-Fire-Beetle\" },\n  { xp: 50, type: \"Giant Frog\", hpRoll: _roll(4, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Frog\" },\n  { xp: 100, type: \"Giant Goat\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Goat\" },\n  { xp: 200, type: \"Giant Hyena\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Hyena\" },\n  { xp: 50, type: \"Giant Lizard\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Lizard\" },\n  { xp: 200, type: \"Giant Octopus\", hpRoll: _roll(8, DiceType.d10), hpModifier: 8, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Octopus\" },\n  { xp: 50, type: \"Giant Owl\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Owl\" },\n  { xp: 50, type: \"Giant Poisonous Snake\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Poisonous-Snake\" },\n  { xp: 25, type: \"Giant Rat\", hpRoll: _roll(2, DiceType.d6), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Giant-Rat\" },\n  { xp: 700, type: \"Giant Scorpion\", hpRoll: _roll(7, DiceType.d10), hpModifier: 14, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Giant-Scorpion\" },\n  { xp: 100, type: \"Giant Sea Horse\", hpRoll: _roll(3, DiceType.d10), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Sea-Horse\" },\n  { xp: 1800, type: \"Giant Shark\", hpRoll: _roll(11, DiceType.d12), hpModifier: 55, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Giant-Shark\" },\n  { xp: 200, type: \"Giant Spider\", hpRoll: _roll(4, DiceType.d10), hpModifier: 4, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Spider\" },\n  { xp: 200, type: \"Giant Toad\", hpRoll: _roll(6, DiceType.d10), hpModifier: 6, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Toad\" },\n  { xp: 200, type: \"Giant Vulture\", hpRoll: _roll(3, DiceType.d10), hpModifier: 6, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Giant-Vulture\" },\n  { xp: 100, type: \"Giant Wasp\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Giant-Wasp\" },\n  { xp: 25, type: \"Giant Weasel\", hpRoll: _roll(2, DiceType.d8), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Giant-Weasel\" },\n  { xp: 50, type: \"Giant Wolf Spider\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Giant-Wolf-Spider\" },\n  { xp: 5000, type: \"Glabrezu\", hpRoll: _roll(15, DiceType.d10), hpModifier: 75, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Glabrezu\" },\n  { xp: 100, type: \"Gibbering Mouther\", hpRoll: _roll(9, DiceType.d8), hpModifier: 27, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Gibbering-Mouther\" },\n  { xp: 450, type: \"Gnoll\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Gnoll\" },\n  { xp: 10, type: \"Goat\", hpRoll: _roll(1, DiceType.d8), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Goat\" },\n  { xp: 50, type: \"Goblin\", hpRoll: _roll(2, DiceType.d6), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Goblin\" },\n  { xp: 700, type: \"Gold Dragon Wyrmling\", hpRoll: _roll(8, DiceType.d8), hpModifier: 24, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Gold-Dragon-Wyrmling\" },\n  { xp: 1800, type: \"Gorgon\", hpRoll: _roll(12, DiceType.d10), hpModifier: 48, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Gorgon\" },\n  { xp: 100, type: \"Gray Ooze\", hpRoll: _roll(3, DiceType.d8), hpModifier: 9, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Gray-Ooze\" },\n  { xp: 450, type: \"Green Dragon Wyrmling\", hpRoll: _roll(7, DiceType.d8), hpModifier: 7, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Green-Dragon-Wyrmling\" },\n  { xp: 700, type: \"Green Hag\", hpRoll: _roll(11, DiceType.d8), hpModifier: 33, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Green-Hag\" },\n  { xp: 450, type: \"Grick\", hpRoll: _roll(6, DiceType.d8), hpModifier: 0, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Grick\" },\n  { xp: 450, type: \"Griffon\", hpRoll: _roll(7, DiceType.d10), hpModifier: 21, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Griffon\" },\n  { xp: 50, type: \"Grimlock\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Grimlock\" },\n  { xp: 5900, type: \"Guardian Naga\", hpRoll: _roll(15, DiceType.d10), hpModifier: 45, challenge: \"10\", reference: \"https://www.dndbeyond.com/monsters/Guardian-Naga\" },\n  { xp: 7200, type: \"Gynosphinx\", hpRoll: _roll(16, DiceType.d10), hpModifier: 48, challenge: \"11\", reference: \"https://www.dndbeyond.com/monsters/Gynosphinx\" },\n  { xp: 1800, type: \"Half-Red Dragon Veteran\", hpRoll: _roll(10, DiceType.d8), hpModifier: 20, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Half-Red-Dragon-Veteran\" },\n  { xp: 200, type: \"Harpy\", hpRoll: _roll(7, DiceType.d8), hpModifier: 7, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Harpy\" },\n  { xp: 10, type: \"Hawk\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Hawk\" },\n  { xp: 700, type: \"Hell Hound\", hpRoll: _roll(7, DiceType.d8), hpModifier: 14, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Hell-Hound\" },\n  { xp: 3900, type: \"Hezrou\", hpRoll: _roll(13, DiceType.d10), hpModifier: 65, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Hezrou\" },\n  { xp: 1800, type: \"Hill Giant\", hpRoll: _roll(10, DiceType.d12), hpModifier: 40, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Hill-Giant\" },\n  { xp: 200, type: \"Hippogriff\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Hippogriff\" },\n  { xp: 100, type: \"Hobgoblin\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Hobgoblin\" },\n  { xp: 10, type: \"Homunculus\", hpRoll: _roll(2, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Homunculus\" },\n  { xp: 7200, type: \"Horned Devil\", hpRoll: _roll(17, DiceType.d10), hpModifier: 85, challenge: \"11\", reference: \"https://www.dndbeyond.com/monsters/Horned-Devil\" },\n  { xp: 450, type: \"Hunter Shark\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Hunter-Shark\" },\n  { xp: 3900, type: \"Hydra\", hpRoll: _roll(15, DiceType.d12), hpModifier: 75, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Hydra\" },\n  { xp: 10, type: \"Hyena\", hpRoll: _roll(1, DiceType.d8), hpModifier: 1, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Hyena\" },\n  { xp: 11500, type: \"Ice Devil\", hpRoll: _roll(19, DiceType.d10), hpModifier: 76, challenge: \"14\", reference: \"https://www.dndbeyond.com/monsters/Ice-Devil\" },\n  { xp: 100, type: \"Ice Mephit\", hpRoll: _roll(6, DiceType.d6), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Ice-Mephit\" },\n  { xp: 200, type: \"Imp\", hpRoll: _roll(3, DiceType.d4), hpModifier: 3, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Imp\" },\n  { xp: 2300, type: \"Invisible Stalker\", hpRoll: _roll(16, DiceType.d8), hpModifier: 32, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Invisible-Stalker\" },\n  { xp: 15000, type: \"Iron Golem\", hpRoll: _roll(20, DiceType.d10), hpModifier: 100, challenge: \"16\", reference: \"https://www.dndbeyond.com/monsters/Iron-Golem\" },\n  { xp: 10, type: \"Jackal\", hpRoll: _roll(1, DiceType.d6), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Jackal\" },\n  { xp: 700, type: \"Killer Whale\", hpRoll: _roll(12, DiceType.d12), hpModifier: 12, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Killer-Whale\" },\n  { xp: 25, type: \"Kobold\", hpRoll: _roll(2, DiceType.d6), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Kobold\" },\n  { xp: 50000, type: \"Kraken\", hpRoll: _roll(27, DiceType.d20), hpModifier: 189, challenge: \"23\", reference: \"https://www.dndbeyond.com/monsters/Kraken\" },\n  { xp: 1100, type: \"Lamia\", hpRoll: _roll(13, DiceType.d10), hpModifier: 26, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Lamia\" },\n  { xp: 10, type: \"Lemure\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Lemure\" },\n  { xp: 33000, type: \"Lich\", hpRoll: _roll(18, DiceType.d8), hpModifier: 54, challenge: \"21\", reference: \"https://www.dndbeyond.com/monsters/Lich\" },\n  { xp: 200, type: \"Lion\", hpRoll: _roll(4, DiceType.d10), hpModifier: 4, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Lion\" },\n  { xp: 10, type: \"Lizard\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Lizard\" },\n  { xp: 100, type: \"Lizardfolk\", hpRoll: _roll(4, DiceType.d8), hpModifier: 4, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Lizardfolk\" },\n  { xp: 100, type: \"Magma Mephit\", hpRoll: _roll(5, DiceType.d6), hpModifier: 5, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Magma-Mephit\" },\n  { xp: 2300, type: \"Magmin\", hpRoll: _roll(2, DiceType.d6), hpModifier: 2, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Magmin\" },\n  { xp: 700, type: \"Mammoth\", hpRoll: _roll(11, DiceType.d12), hpModifier: 55, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Mammoth\" },\n  { xp: 100, type: \"Manticore\", hpRoll: _roll(8, DiceType.d10), hpModifier: 24, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Manticore\" },\n  { xp: 15000, type: \"Marilith\", hpRoll: _roll(18, DiceType.d10), hpModifier: 90, challenge: \"16\", reference: \"https://www.dndbeyond.com/monsters/Marilith\" },\n  { xp: 25, type: \"Mastiff\", hpRoll: _roll(1, DiceType.d8), hpModifier: 1, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Mastiff\" },\n  { xp: 2300, type: \"Medusa\", hpRoll: _roll(17, DiceType.d8), hpModifier: 51, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Medusa\" },\n  { xp: 25, type: \"Merfolk\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Merfolk\" },\n  { xp: 450, type: \"Merrow\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Merrow\" },\n  { xp: 450, type: \"Mimic\", hpRoll: _roll(9, DiceType.d8), hpModifier: 18, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Mimic\" },\n  { xp: 700, type: \"Minotaur\", hpRoll: _roll(9, DiceType.d10), hpModifier: 27, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Minotaur\" },\n  { xp: 25, type: \"Minotaur Skeleton\", hpRoll: _roll(9, DiceType.d10), hpModifier: 18, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Minotaur-Skeleton\" },\n  { xp: 450, type: \"Mule\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Mule\" },\n  { xp: 700, type: \"Mummy\", hpRoll: _roll(9, DiceType.d8), hpModifier: 18, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Mummy\" },\n  { xp: 13000, type: \"Mummy Lord\", hpRoll: _roll(13, DiceType.d8), hpModifier: 39, challenge: \"15\", reference: \"https://www.dndbeyond.com/monsters/Mummy-Lord\" },\n  { xp: 10000, type: \"Nalfeshnee\", hpRoll: _roll(16, DiceType.d10), hpModifier: 96, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Nalfeshnee\" },\n  { xp: 700, type: \"Nightmare\", hpRoll: _roll(8, DiceType.d10), hpModifier: 24, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Nightmare\" },\n  { xp: 1800, type: \"Night Hag\", hpRoll: _roll(15, DiceType.d8), hpModifier: 45, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Night-Hag\" },\n  { xp: 450, type: \"Nothic\", hpRoll: _roll(6, DiceType.d8), hpModifier: 18, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Nothic\" },\n  { xp: 450, type: \"Ochre Jelly\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ochre-Jelly\" },\n  { xp: 10, type: \"Octopus\", hpRoll: _roll(1, DiceType.d6), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Octopus\" },\n  { xp: 450, type: \"Ogre\", hpRoll: _roll(7, DiceType.d10), hpModifier: 21, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ogre\" },\n  { xp: 450, type: \"Ogre Zombie\", hpRoll: _roll(9, DiceType.d10), hpModifier: 36, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Ogre-Zombie\" },\n  { xp: 2900, type: \"Oni\", hpRoll: _roll(13, DiceType.d10), hpModifier: 39, challenge: \"7\", reference: \"https://www.dndbeyond.com/monsters/Oni\" },\n  { xp: 100, type: \"Orc\", hpRoll: _roll(2, DiceType.d8), hpModifier: 6, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Orc\" },\n  { xp: 1800, type: \"Otyugh\", hpRoll: _roll(12, DiceType.d10), hpModifier: 48, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Otyugh\" },\n  { xp: 10, type: \"Owl\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Owl\" },\n  { xp: 700, type: \"Owlbear\", hpRoll: _roll(7, DiceType.d10), hpModifier: 21, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Owlbear\" },\n  { xp: 50, type: \"Panther\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Panther\" },\n  { xp: 450, type: \"Pegasus\", hpRoll: _roll(7, DiceType.d10), hpModifier: 21, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Pegasus\" },\n  { xp: 700, type: \"Phase Spider\", hpRoll: _roll(5, DiceType.d10), hpModifier: 5, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Phase-Spider\" },\n  { xp: 25000, type: \"Pit Fiend\", hpRoll: _roll(24, DiceType.d10), hpModifier: 168, challenge: \"20\", reference: \"https://www.dndbeyond.com/monsters/Pit-Fiend\" },\n  { xp: 15000, type: \"Planetar\", hpRoll: _roll(16, DiceType.d10), hpModifier: 112, challenge: \"16\", reference: \"https://www.dndbeyond.com/monsters/Planetar\" },\n  { xp: 450, type: \"Plesiosaurus\", hpRoll: _roll(8, DiceType.d10), hpModifier: 24, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Plesiosaurus\" },\n  { xp: 25, type: \"Poisonous Snake\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Poisonous-Snake\" },\n  { xp: 450, type: \"Polar Bear\", hpRoll: _roll(5, DiceType.d10), hpModifier: 15, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Polar-Bear\" },\n  { xp: 25, type: \"Pony\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Pony\" },\n  { xp: 50, type: \"Pseudodragon\", hpRoll: _roll(2, DiceType.d4), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Pseudodragon\" },\n  { xp: 50, type: \"Pteranodon\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Pteranodon\" },\n  { xp: 13000, type: \"Purple Worm\", hpRoll: _roll(15, DiceType.d20), hpModifier: 90, challenge: \"15\", reference: \"https://www.dndbeyond.com/monsters/Purple-Worm\" },\n  { xp: 200, type: \"Quasit\", hpRoll: _roll(3, DiceType.d4), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Quasit\" },\n  { xp: 10, type: \"Quipper\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Quipper\" },\n  { xp: 10000, type: \"Rakshasa\", hpRoll: _roll(13, DiceType.d8), hpModifier: 52, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Rakshasa\" },\n  { xp: 10, type: \"Rat\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Rat\" },\n  { xp: 10, type: \"Raven\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Raven\" },\n  { xp: 1100, type: \"Red Dragon Wyrmling\", hpRoll: _roll(10, DiceType.d8), hpModifier: 30, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Red-Dragon-Wyrmling\" },\n  { xp: 100, type: \"Reef Shark\", hpRoll: _roll(4, DiceType.d8), hpModifier: 4, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Reef-Shark\" },\n  { xp: 7200, type: \"Remorhaz\", hpRoll: _roll(17, DiceType.d12), hpModifier: 85, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Remorhaz\" },\n  { xp: 450, type: \"Rhinoceros\", hpRoll: _roll(6, DiceType.d10), hpModifier: 12, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Rhinoceros\" },\n  { xp: 50, type: \"Riding Horse\", hpRoll: _roll(2, DiceType.d10), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Riding-Horse\" },\n  { xp: 7200, type: \"Roc\", hpRoll: _roll(16, DiceType.d20), hpModifier: 80, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Roc\" },\n  { xp: 1800, type: \"Roper\", hpRoll: _roll(11, DiceType.d10), hpModifier: 33, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Roper\" },\n  { xp: 100, type: \"Rug of Smothering\", hpRoll: _roll(6, DiceType.d10), hpModifier: 0, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Rug-of-Smothering\" },\n  { xp: 450, type: \"Rust Monster\", hpRoll: _roll(5, DiceType.d8), hpModifier: 5, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Rust-Monster\" },\n  { xp: 450, type: \"Saber-Toothed Tiger\", hpRoll: _roll(7, DiceType.d10), hpModifier: 14, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Saber-Toothed-Tiger\" },\n  { xp: 100, type: \"Sahuagin\", hpRoll: _roll(4, DiceType.d8), hpModifier: 4, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Sahuagin\" },\n  { xp: 1800, type: \"Salamander\", hpRoll: _roll(12, DiceType.d10), hpModifier: 24, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Salamander\" },\n  { xp: 100, type: \"Satyr\", hpRoll: _roll(7, DiceType.d8), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Satyr\" },\n  { xp: 10, type: \"Scorpion\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Scorpion\" },\n  { xp: 450, type: \"Sea Hag\", hpRoll: _roll(7, DiceType.d8), hpModifier: 21, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Sea-Hag\" },\n  { xp: 10, type: \"Sea Horse\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Sea-Horse\" },\n  { xp: 100, type: \"Shadow\", hpRoll: _roll(3, DiceType.d8), hpModifier: 3, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Shadow\" },\n  { xp: 1800, type: \"Shambling Mound\", hpRoll: _roll(16, DiceType.d10), hpModifier: 48, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Shambling-Mound\" },\n  { xp: 2900, type: \"Shield Guardian\", hpRoll: _roll(15, DiceType.d10), hpModifier: 60, challenge: \"7\", reference: \"https://www.dndbeyond.com/monsters/Shield-Guardian\" },\n  { xp: 10, type: \"Shrieker\", hpRoll: _roll(3, DiceType.d8), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Shrieker\" },\n  { xp: 450, type: \"Silver Dragon Wyrmling\", hpRoll: _roll(6, DiceType.d8), hpModifier: 18, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Silver-Dragon-Wyrmling\" },\n  { xp: 50, type: \"Skeleton\", hpRoll: _roll(2, DiceType.d8), hpModifier: 4, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Skeleton\" },\n  { xp: 33000, type: \"Solar\", hpRoll: _roll(18, DiceType.d10), hpModifier: 144, challenge: \"21\", reference: \"https://www.dndbeyond.com/monsters/Solar\" },\n  { xp: 700, type: \"Spectator\", hpRoll: _roll(6, DiceType.d8), hpModifier: 12, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Spectator\" },\n  { xp: 200, type: \"Specter\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Specter\" },\n  { xp: 10, type: \"Spider\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Spider\" },\n  { xp: 3900, type: \"Spirit Naga\", hpRoll: _roll(10, DiceType.d10), hpModifier: 20, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Spirit-Naga\" },\n  { xp: 50, type: \"Sprite\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Sprite\" },\n  { xp: 50, type: \"Steam Mephit\", hpRoll: _roll(6, DiceType.d6), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Steam-Mephit\" },\n  { xp: 2900, type: \"Stirge\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Stirge\" },\n  { xp: 25, type: \"Stone Giant\", hpRoll: _roll(11, DiceType.d12), hpModifier: 55, challenge: \"7\", reference: \"https://www.dndbeyond.com/monsters/Stone-Giant\" },\n  { xp: 5900, type: \"Stone Golem\", hpRoll: _roll(17, DiceType.d10), hpModifier: 85, challenge: \"10\", reference: \"https://www.dndbeyond.com/monsters/Stone-Golem\" },\n  { xp: 10000, type: \"Storm Giant\", hpRoll: _roll(20, DiceType.d12), hpModifier: 100, challenge: \"13\", reference: \"https://www.dndbeyond.com/monsters/Storm-Giant\" },\n  { xp: 1100, type: \"Succubus/Incubus\", hpRoll: _roll(12, DiceType.d8), hpModifier: 12, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Succubus\" },\n  { xp: 50, type: \"Swarm of Bats\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Bats\" },\n  { xp: 100, type: \"Swarm of Insects\", hpRoll: _roll(5, DiceType.d8), hpModifier: 0, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Insects\" },\n  { xp: 450, type: \"Swarm of Poisonous Snakes\", hpRoll: _roll(8, DiceType.d8), hpModifier: 0, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Poisonous-Snakes\" },\n  { xp: 200, type: \"Swarm of Quippers\", hpRoll: _roll(8, DiceType.d8), hpModifier: 0, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Quippers\" },\n  { xp: 50, type: \"Swarm of Rats\", hpRoll: _roll(7, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Rats\" },\n  { xp: 50, type: \"Swarm of Ravens\", hpRoll: _roll(7, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Swarm-of-Ravens\" },\n  { xp: 155000, type: \"Tarrasque\", hpRoll: _roll(33, DiceType.d20), hpModifier: 330, challenge: \"30\", reference: \"https://www.dndbeyond.com/monsters/Tarrasque\" },\n  { xp: 200, type: \"Tiger\", hpRoll: _roll(5, DiceType.d10), hpModifier: 10, challenge: \"1\", reference: \"https://www.dndbeyond.com/monsters/Tiger\" },\n  { xp: 5000, type: \"Treant\", hpRoll: _roll(12, DiceType.d12), hpModifier: 60, challenge: \"9\", reference: \"https://www.dndbeyond.com/monsters/Treant\" },\n  { xp: 1800, type: \"Triceratops\", hpRoll: _roll(10, DiceType.d12), hpModifier: 30, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Triceratops\" },\n  { xp: 1800, type: \"Troll\", hpRoll: _roll(8, DiceType.d10), hpModifier: 40, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Troll\" },\n  { xp: 25, type: \"Twig Blight\", hpRoll: _roll(1, DiceType.d6), hpModifier: 1, challenge: \"1/8\", reference: \"https://www.dndbeyond.com/monsters/Twig-Blight\" },\n  { xp: 3900, type: \"Tyrannosaurus Rex\", hpRoll: _roll(13, DiceType.d12), hpModifier: 52, challenge: \"8\", reference: \"https://www.dndbeyond.com/monsters/Tyrannosaurus-Rex\" },\n  { xp: 1800, type: \"Unicorn\", hpRoll: _roll(9, DiceType.d10), hpModifier: 18, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Unicorn\" },\n  { xp: 10000, type: \"Vampire\", hpRoll: _roll(17, DiceType.d8), hpModifier: 68, challenge: \"13\", reference: \"https://www.dndbeyond.com/monsters/Vampire\" },\n  { xp: 1800, type: \"Vampire Spawn\", hpRoll: _roll(11, DiceType.d8), hpModifier: 33, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Vampire-Spawn\" },\n  { xp: 50, type: \"Violet Fungus\", hpRoll: _roll(4, DiceType.d8), hpModifier: 0, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Violet-Fungus\" },\n  { xp: 2300, type: \"Vrock\", hpRoll: _roll(11, DiceType.d10), hpModifier: 44, challenge: \"6\", reference: \"https://www.dndbeyond.com/monsters/Vrock\" },\n  { xp: 10, type: \"Vulture\", hpRoll: _roll(1, DiceType.d8), hpModifier: 1, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Vulture\" },\n  { xp: 100, type: \"Warhorse\", hpRoll: _roll(3, DiceType.d10), hpModifier: 3, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Warhorse\" },\n  { xp: 100, type: \"Warhorse Skeleton\", hpRoll: _roll(3, DiceType.d10), hpModifier: 6, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Warhorse-Skeleton\" },\n  { xp: 1800, type: \"Water Elemental\", hpRoll: _roll(12, DiceType.d10), hpModifier: 48, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Water-Elemental\" },\n  { xp: 10, type: \"Weasel\", hpRoll: _roll(1, DiceType.d4), hpModifier: 0, challenge: \"0\", reference: \"https://www.dndbeyond.com/monsters/Weasel\" },\n  { xp: 1800, type: \"Werebear\", hpRoll: _roll(18, DiceType.d8), hpModifier: 54, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Werebear\" },\n  { xp: 1100, type: \"Wereboar\", hpRoll: _roll(12, DiceType.d8), hpModifier: 24, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Wereboar\" },\n  { xp: 450, type: \"Wererat\", hpRoll: _roll(6, DiceType.d8), hpModifier: 6, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/Wererat\" },\n  { xp: 1100, type: \"Weretiger\", hpRoll: _roll(16, DiceType.d8), hpModifier: 48, challenge: \"4\", reference: \"https://www.dndbeyond.com/monsters/Weretiger\" },\n  { xp: 700, type: \"Werewolf\", hpRoll: _roll(9, DiceType.d8), hpModifier: 18, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Werewolf\" },\n  { xp: 450, type: \"White Dragon Wyrmling\", hpRoll: _roll(5, DiceType.d8), hpModifier: 10, challenge: \"2\", reference: \"https://www.dndbeyond.com/monsters/White-Dragon-Wyrmling\" },\n  { xp: 700, type: \"Wight\", hpRoll: _roll(6, DiceType.d8), hpModifier: 18, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Wight\" },\n  { xp: 450, type: \"Will-o’-Wisp\", hpRoll: _roll(9, DiceType.d4), hpModifier: 0, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Will-o-Wisp\" },\n  { xp: 700, type: \"Winter Wolf\", hpRoll: _roll(10, DiceType.d10), hpModifier: 20, challenge: \"3\", reference: \"https://www.dndbeyond.com/monsters/Winter-Wolf\" },\n  { xp: 50, type: \"Wolf\", hpRoll: _roll(2, DiceType.d8), hpModifier: 2, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Wolf\" },\n  { xp: 100, type: \"Worg\", hpRoll: _roll(4, DiceType.d10), hpModifier: 4, challenge: \"1/2\", reference: \"https://www.dndbeyond.com/monsters/Worg\" },\n  { xp: 1800, type: \"Wraith\", hpRoll: _roll(9, DiceType.d8), hpModifier: 27, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Wraith\" },\n  { xp: 2300, type: \"Wyvern\", hpRoll: _roll(13, DiceType.d10), hpModifier: 39, challenge: \"\", reference: \"https://www.dndbeyond.com/monsters/Wyvern\" },\n  { xp: 1800, type: \"Xorn\", hpRoll: _roll(7, DiceType.d8), hpModifier: 42, challenge: \"5\", reference: \"https://www.dndbeyond.com/monsters/Xorn\" },\n  { xp: 5, type: \"Zombie\", hpRoll: _roll(3, DiceType.d8), hpModifier: 9, challenge: \"1/4\", reference: \"https://www.dndbeyond.com/monsters/Zombie\" },\n\n  //CoS specific\n  { xp: 450, type: \"Wereraven\", hpRoll: _roll(7, DiceType.d8), challenge: \"2\", hpModifier: 0, reference: \"https://dnd-5e.herokuapp.com/monsters/wereraven\" },\n  { xp: 50, type: \"Needdle Blight\", hpRoll: _roll(2, DiceType.d8), challenge: \"1/4\", hpModifier: 2, reference: \"https://dnd-5e.herokuapp.com/monsters/needle-blight\" },\n  { xp: 1800, type: \"Revenant\", hpRoll: _roll(16, DiceType.d8), challenge: \"5\", hpModifier: 64, reference: \"https://dnd-5e.herokuapp.com/monsters/revenant\" },\n  { xp: 200, type: \"Scarecrow\", hpRoll: _roll(8, DiceType.d8), challenge: \"1\", hpModifier: 0, reference: \"https://dnd-5e.herokuapp.com/monsters/scarecrow\" },\n  { xp: 200, type: \"Strahd's Zombie\", hpRoll: _roll(4, DiceType.d8), challenge: \"1\", hpModifier: 12, reference: \"https://dnd-5e.herokuapp.com/monsters/strahd-zombie\" },\n  { xp: 3900, type: \"Esmerelda d’Avenir\", hpRoll: _roll(11, DiceType.d8), challenge: \"8\", hpModifier: 33, reference: \"https://dnd-5e.herokuapp.com/monsters/esmerelda-davenir\" },\n  { xp: 5900, type: \"Rahadin\", hpRoll: _roll(18, DiceType.d8), challenge: \"10\", hpModifier: 54, reference: \"https://dnd-5e.herokuapp.com/monsters/rahadin\" },\n  { xp: 50, type: \"Broom of Animated Attack\", hpRoll: _roll(5, DiceType.d6), challenge: \"1/4\", hpModifier: 0, reference: \"https://dnd-5e.herokuapp.com/monsters/broom-of-animated-attack\" },\n  { xp: 10, type: \"Crawling Claw\", hpRoll: _roll(1, DiceType.d4), challenge: \"0\", hpModifier: 0, reference: \"https://dnd-5e.herokuapp.com/monsters/crawling-claw\" },\n  { xp: 100, type: \"Barovian Witch\", hpRoll: _roll(3, DiceType.d8), challenge: \"1/2\", hpModifier: 3, reference: \"https://dnd-5e.herokuapp.com/monsters/barovian-witch\" },\n  { xp: 3000, type: \"Strahd\", hpRoll: _roll(17, DiceType.d8), challenge: \"15\", hpModifier: 68, reference: \"https://dnd-5e.herokuapp.com/monsters/strahd-von-zarovich\" },\n];\n\nexport const getMonsterDataFor = (type: MonsterType | IMonsterData): IMonsterData => {\n  const monster = ((type as IMonsterData).xp === undefined ? monsterData.find(m => m.type === type) : type) as IMonsterData;\n  monster.hp = monster.hpRoll!() + monster.hpModifier!;\n\n  return monster;\n}","import { random } from \"../DiceRoll\";\n\nexport const barovianFamilyNames = [\"Alastroi\", \"Antonovic\", \"Antonova\", \"Barthos\", \"Belasco\", \"Cantemir\",\n  \"Dargovich\", \"Dargova\", \"Diavolov\", \"Diminski\", \"Dilisnya\", \"Drazkoi\", \"Garvinski\", \"Grejenko\", \"Groza\",\n  \"Grygorovi\", \"Grygorova\", \"Ivanovich\", \"Ivanova\", \"Janek\", \"Karushkin\", \"Konstanti\", \"Konstanti\", \"Krezkov\",\n  \"Krezkova\", \"Krykski\", \"Lansten\", \"Lazarescu\", \"Lukresh\", \"Lipsiege\", \"Martikov\", \"Martikova\", \"Mironovic\",\n  \"Mironovn\", \"Moldovar\", \"Nikolovic\", \"Nikolova\", \"Nimirovic\", \"Nimirova\", \"Oronovich\", \"Oronova\", \"Petrovich\",\n  \"Petrovna\", \"Polensky\", \"Radovich\", \"Radova\", \"Rilsky\", \"Stefanovi\", \"Stefanova\", \"Strazni\"]\n\nexport const barovianMaleNames = [\"Alek\", \"Andrej\", \"Anton\", \"Balthazar\", \"Bogan\", \"Boris\", \"Dargos\", \"Darzin\",\n  \"Dragomir\", \"Emeric\", \"Falkon\", \"Frederich\", \"Franz\", \"Gargosh\", \"Gorek\", \"Grygori\", \"Hans\", \"Harkus\", \"Ivan\",\n  \"Jirko\", \"Kobal\", \"Korga\", \"Krystofor\", \"Lazlo\", \"Livius\", \"Marek\", \"Miroslav\", \"Nikolaj\", \"Nimir\", \"Oleg\",\n  \"Radovan\", \"Radu\", \"Seraz\", \"Sergei\", \"Stefan\", \"Tural\", \"Valentin\", \"Vasily\", \"Vladislav\", \"Waltar\", \"Yesper\",\n  \"Zsolt\", \"Petrovna\", \"Polensky\", \"Radovich\", \"Radova\", \"Rilsky\", \"Stefanovi\", \"Stefanova\", \"Strazni\",]\n\nexport const barovianFemaleNames = [\"Alana\", \"Clavdia\", \"Danya\", \"Dezdrelda\", \"Diavola\", \"Dorina\", \"Drasha\",\n  \"Drilvia\", \"Elisabeta\", \"Fatima\", \"Grilsha\", \"Isabella\", \"Ivana\", \"Jarzinka\", \"Kala\", \"Katerina\", \"Kereza\",\n  \"Korina\", \"Lavinia\", \"Magda\", \"Marta\", \"Mathilda\", \"Minodora\", \"Mirabel\", \"Miruna\", \"Nimira\", \"Nyanka\", \"Olivenka\",\n  \"Ruxandra\", \"Sorina\", \"Tereska\", \"Valentina\", \"Vasha\", \"Victoria\", \"Wensenci\", \"Zondra\",]\n\n\nexport const generateMaleBorovianName = (familyName?: string) => {\n  const n1 = random(0, barovianMaleNames.length - 1);\n  familyName = familyName || barovianFamilyNames[random(0, barovianFamilyNames.length - 1)]\n\n  return `${barovianMaleNames[n1]} ${familyName}`;\n}\n\nexport const generateFemaleBorovianName = (familyName?: string) => {\n  const n1 = random(0, barovianFemaleNames.length - 1);\n  familyName = familyName || barovianFamilyNames[random(0, barovianFamilyNames.length - 1)]\n\n  return `${barovianFemaleNames[n1]} ${familyName}`;\n}\n","import { DiceType, random, roll } from '../DiceRoll';\nimport { barovianFamilyNames, generateFemaleBorovianName, generateMaleBorovianName } from '../names/NameUtils';\nimport { generateEncounter, generateFixedEncounter, IEncounterMonster } from './EncounterUtils';\nimport { IMonsterData, MonsterType } from './Monsters';\nimport { randomBlinkyToy, randomCocoonContent, randomTrinket, randomUnseenServant } from './WeirdEncounters';\n\nexport enum XPDificulty {\n  EASY = 0,\n  MEDIUM = 1,\n  HARD = 2,\n  DEADLY = 3\n}\n\nexport const nightTimeEncounterTable = (n: number): IEncounterMonster[] => {\n  switch (n) {\n    case 2: return generateFixedEncounter(MonsterType.Ghost, 1)\n    case 3: return [{ type: \"Hunting Trap\", hp: -1 }]\n    case 4: return [{ type: \"Grave\", hp: -1 }]\n    case 5: return [{ type: randomTrinket(), hp: -1 }]\n    case 6: return [{ type: \"Corpse\", hp: -1 }]\n    case 7: return [{ type: \"Hidden Bundle\", hp: -1 }]\n    case 8: return [{ type: \"Skeletal rider\", hp: -1 }]\n    case 9: return generateEncounter(MonsterType.SwarmofBats, 1, DiceType.d8)\n    case 10: return generateEncounter(MonsterType.DireWolf, 1, DiceType.d6)\n    case 11: return generateEncounter(MonsterType.Wolf, 3, DiceType.d6)\n    case 12: return generateEncounter(MonsterType.Berserker, 1, DiceType.d6)\n    case 13: {\n      const foo = generateFixedEncounter(MonsterType.Druid, 1);\n      foo.push(...generateEncounter(MonsterType.TwigBlight, 2, DiceType.d6));\n      return foo;\n    }\n    case 14: return generateEncounter(MonsterType.NeeddleBlight, 2, DiceType.d4)\n    case 15: return generateEncounter(MonsterType.Werewolf, 1, DiceType.d6, 0, \"Werewolves in wolf form\")\n    case 16: return generateEncounter(MonsterType.Zombie, 3, DiceType.d6)\n    case 17: return generateEncounter(MonsterType.Scarecrow, 1, DiceType.d6)\n    case 18: return generateEncounter(MonsterType.Strahd, 1, DiceType.d8);\n    case 19: return generateFixedEncounter(MonsterType.WillOWisp, 1);\n    case 20: return generateFixedEncounter(MonsterType.Revenant, 1)\n    default: return []\n  }\n}\n\nexport const daytimeEncounterTable = (n: number): IEncounterMonster[] => {\n  switch (n) {\n    case 2: return generateEncounter(MonsterType.Commoner, 3, DiceType.d6, 0, \"Barovian Commoners\")\n    case 3: return generateEncounter(MonsterType.Scout, 1, DiceType.d6, 0, \"Barovian Scouts\")\n    case 4: return [{ type: \"Hunting Trap\", hp: -1 }]\n    case 5: return [{ type: \"Grave\", hp: -1 }]\n    case 6: return [{ type: \"False Trail\", hp: -1 }]\n    case 7: return generateEncounter(MonsterType.Bandit, 1, DiceType.d4, 1, \"Vistani Bandits\")\n    case 8: return [{ type: \"Skeletal Rider\", hp: -1 }]\n    case 9: return [{ type: \"Trinket\", name: randomTrinket(), hp: -1 }]\n    case 10: return [{ type: \"Hidden Bundle\", hp: -1 }]\n    case 11: return roll(1, DiceType.d10) % 2 === 0 ? generateEncounter(MonsterType.SwarmofRavens, 7, DiceType.d8) : generateFixedEncounter(MonsterType.Wereraven)\n    case 13: return generateEncounter(MonsterType.Wolf, 3, DiceType.d6)\n    case 12: return generateEncounter(MonsterType.DireWolf, 1, DiceType.d6)\n    case 14: return generateEncounter(MonsterType.Berserker, 1, DiceType.d4)\n    case 15: return [{ type: \"Corpse\", hp: -1 }]\n    case 16: return generateEncounter(MonsterType.Werewolf, 1, DiceType.d6, 0, \"Werewolves in human form\")\n    case 17: {\n      const foo = generateFixedEncounter(MonsterType.Druid, 1);\n      foo.push(...generateEncounter(MonsterType.TwigBlight, 2, DiceType.d6));\n      return foo;\n    }\n    case 18: return generateEncounter(MonsterType.NeeddleBlight, 2, DiceType.d4)\n    case 19: return generateEncounter(MonsterType.Scarecrow, 1, DiceType.d6)\n    case 20: return generateFixedEncounter(MonsterType.Revenant, 1)\n    default: return []\n  }\n}\n\nconst castleRavenloftTable = (n: number): IEncounterMonster[] => {\n  switch (n) {\n    case 2: return generateFixedEncounter(MonsterType.EsmereldadAvenir, 1)\n    case 3: return generateFixedEncounter(MonsterType.Rahadin, 1);\n    case 4: return generateFixedEncounter(MonsterType.Cat, 1, \"Black Cat\");\n    case 5: return generateFixedEncounter(MonsterType.BroomofAnimatedAttack, 1);\n    case 6: return generateEncounter(MonsterType.FlyingSword, 1, DiceType.d4, 1);\n    case 7: return [{ type: \"Blinky Toy\", name: randomBlinkyToy(), hp: -1 }];\n    case 8: return [{ type: \"Unseen Servant\", name: randomUnseenServant(), hp: -1 }];\n    case 9: return generateEncounter(MonsterType.Commoner, 1, DiceType.d4, 0, \"Barovian Commoners\")\n    case 10: return generateEncounter(MonsterType.CrawlingClaw, 1, DiceType.d4)\n    case 11: return generateEncounter(MonsterType.Shadow, 1, DiceType.d6)\n    case 12: return generateEncounter(MonsterType.SwarmofBats, 1, DiceType.d6)\n    case 13: return generateFixedEncounter(MonsterType.StrahdZombie, 1, \"Crawling Strahd's Zombie\");\n    case 14: return generateEncounter(MonsterType.Thug, 1, DiceType.d4, 1, \"Vistani Thugs\")\n    case 15: return generateEncounter(MonsterType.Thug, 1, DiceType.d4, 1)\n    case 16: return [{ type: \"Trinket\", name: randomTrinket(), hp: -1 }]\n    case 17: return [{ type: \"Giant Spider Cocoon\", name: randomCocoonContent(), hp: -1 }]\n    case 18: return generateFixedEncounter(MonsterType.BarovianWitch, 1);\n    case 19: return generateEncounter(MonsterType.VampireSpawn, 1, DiceType.d4, 1)\n    case 20: return generateFixedEncounter(MonsterType.Strahd, 1);\n    default: return [];\n  }\n}\n\nexport const generateHouseOccupants = (): IEncounterMonster[] => {\n  const ret: any = []\n\n  const adults = roll(1, DiceType.d4);\n  const man = random(1, adults);\n  const woman = adults - man;\n  const children = roll(1, DiceType.d8) - 1;\n  const maleChildren = random(1, children);\n  const femaleChildren = children - maleChildren;\n\n  const family = generateBarovianFamily(man + maleChildren, woman + femaleChildren);\n\n  let countMan = 0, countWoman = 0;\n\n  return family.map(m => {\n    m.gender === \"male\" ? countMan++ : countWoman++;\n    if (countMan > man || countWoman > woman)\n      m.name = m.name + \" (Child)\"\n\n    return m;\n  });\n}\n\nexport const generateVillageOfBaroviaHouseEncounter = (n?: number) => {\n  if (!n) roll(1, DiceType.d20);\n  switch (n) {\n    case 1: case 2: case 3:\n      return [{ type: \"None\", name: \"Empty\", hp: -1 }];\n    case 4: case 5: case 6: case 7: case 8:\n      return generateEncounter(MonsterType.SwarmofRats, 2, DiceType.d4);\n    case 17: case 18: case 19: case 20:\n      return generateEncounter(MonsterType.StrahdZombie, 2, DiceType.d4);\n    default:\n      return generateHouseOccupants();\n  }\n}\n\nexport const generateVallakiCultists = () => {\n  const adults = roll(2, DiceType.d4);\n  const man = random(1, adults);\n  const woman = adults - man;\n\n  const cultists = [];\n\n  for (let i = 0; i < man; i++) {\n    const name = generateMaleBorovianName();\n    const c = generateFixedEncounter(MonsterType.Cultist, 1, name, \"male\")\n    cultists.push(c[0])\n  }\n\n  for (let i = 0; i < woman; i++) {\n    const name = generateFemaleBorovianName();\n    const c = generateFixedEncounter(MonsterType.Cultist, 1, name, \"female\")\n    cultists.push(c[0])\n  }\n\n  cultists.push(...generateFixedEncounter(MonsterType.CultFanatic, 1, generateMaleBorovianName(), \"male\"))\n\n  return cultists;\n}\n\nexport const generateVallakiHouseEncounter = (n?: number): IEncounterMonster[] => {\n  if (!n) roll(1, DiceType.d20);\n  switch (n) {\n    case 1: case 2: case 3:\n      return [{ type: \"None\", name: \"Empty\", hp: -1 }];\n    case 4: case 5:\n      return generateEncounter(MonsterType.SwarmofRats, 2, DiceType.d4);\n    case 19: case 20:\n      return generateVallakiCultists();\n    default:\n      return generateHouseOccupants();\n  }\n}\n\nexport const generateCastleRavenloftEncounter = (n?: number) => {\n  if (!n) n = roll(1, DiceType.d12) + roll(1, DiceType.d8);\n  return castleRavenloftTable(n);\n}\n\nexport const generateDaytimeEncounter = () => {\n  const n = roll(1, DiceType.d12) + roll(1, DiceType.d8);\n  return daytimeEncounterTable(n);\n}\n\nexport const generateNightTimeEncounter = () => {\n  const n = roll(1, DiceType.d12) + roll(1, DiceType.d8);\n  return nightTimeEncounterTable(n);\n}\n\nexport const generateMaleBarovian = (familyName?: string) => generateFixedEncounter(MonsterType.Commoner, 1, generateMaleBorovianName(familyName), \"Male\");\nexport const generateFemaleBarovian = (familyName?: string) => generateFixedEncounter(MonsterType.Commoner, 1, generateFemaleBorovianName(familyName), \"Female\");\nexport const generateBarovianFamily = (maleCount: number, femaleCount: number) => {\n  const family = [];\n  const familyName = barovianFamilyNames[random(1, barovianFamilyNames.length - 1)];\n\n  for (let i = 0; i < maleCount; i++)\n    family.push(...generateMaleBarovian(familyName));\n\n  for (let i = 0; i < femaleCount; i++)\n    family.push(...generateFemaleBarovian(familyName));\n\n  return family;\n}\n\nexport const calculateAdjustedXP = (monsters: IMonsterData[]) => {\n  let xp = 0\n  let modifier;\n  if (monsters.length >= 15) modifier = 4;\n  else if (monsters.length >= 11) modifier = 3;\n  else if (monsters.length >= 7) modifier = 2.5;\n  else if (monsters.length >= 3) modifier = 2;\n  else if (monsters.length === 2) modifier = 1.5;\n  else modifier = 1;\n\n  console.log(modifier)\n\n  monsters.forEach(m => xp += m.xp!)\n  xp *= modifier;\n\n  return xp;\n}\n\n//TODO: PUT IN AN ENUM 0 easy, 1 medium, 2 hard, deadly\nexport const getXPDifficultyForLevel = (level: number) => {\n  const table: any = {\n    1: { 0: 25, 1: 50, 2: 75, 3: 100 },\n    2: { 0: 50, 1: 100, 2: 150, 3: 200 },\n    3: { 0: 75, 1: 150, 2: 225, 3: 400 },\n    4: { 0: 125, 1: 250, 2: 375, 3: 500 },\n    5: { 0: 250, 1: 500, 2: 750, 3: 1100 },\n    6: { 0: 300, 1: 600, 2: 900, 3: 1400 },\n    7: { 0: 350, 1: 750, 2: 1100, 3: 1700 },\n    8: { 0: 450, 1: 900, 2: 1400, 3: 2100 },\n    9: { 0: 550, 1: 1100, 2: 1600, 3: 2400 },\n    10: { 0: 600, 1: 1200, 2: 1900, 3: 2800 },\n    11: { 0: 800, 1: 1600, 2: 2400, 3: 3600 },\n    12: { 0: 1000, 1: 2000, 2: 3000, 3: 4500 },\n    13: { 0: 1100, 1: 2200, 2: 30400, 3: 5100 },\n    14: { 0: 1250, 1: 2500, 2: 3800, 3: 5700 },\n    15: { 0: 1400, 1: 2800, 2: 4300, 3: 6400 },\n    16: { 0: 1600, 1: 3200, 2: 4800, 3: 7200 },\n    17: { 0: 2000, 1: 3900, 2: 5900, 3: 8800 },\n    18: { 0: 2100, 1: 4200, 2: 6300, 3: 9500 },\n    19: { 0: 2400, 1: 4900, 2: 7300, 3: 10900 },\n    20: { 0: 2800, 1: 5700, 2: 8500, 3: 12700 },\n  }\n\n  return table[level];\n}\n\n\n\n","import { DiceType, roll } from \"../DiceRoll\";\nimport { getMonsterDataFor, MonsterType } from \"./Monsters\";\n\nexport interface IEncounterMonster {\n  name?: string;\n  gender?: string;\n  type: string\n  hp: number;\n  reference?: string\n}\n\nexport const generateFixedEncounter = (monsterType: MonsterType, n = 1, encounterName?: string, gender?: string): IEncounterMonster[] => {\n  const res: IEncounterMonster[] = [];\n  for (let i = 0; i < n; i++) {\n    const m = getMonsterDataFor(monsterType)\n    res.push({\n      name: encounterName,\n      hp: m.hp!,\n      reference: m.reference,\n      type: m.type,\n      gender\n    })\n  }\n\n  res.push();\n\n  return res;\n}\n\nexport const generateEncounter = (monsterType: MonsterType, amount: number, diceType: DiceType, modifier: number = 0, encounterName?: string): IEncounterMonster[] => {\n  const n = roll(diceType, amount) + modifier;\n\n  return generateFixedEncounter(monsterType, n, encounterName);\n}\n","import { random } from \"../DiceRoll\";\n\nconst blinkToys = [\"A plush werewolf stuffed with sawdust and tiny wood­ carved babies. It has dull knife blades for claws and retractable teeth.\",\n  \"A smiling jester marionette with tangled strings and tiny copper bells sewn into its cap.\",\n  \"A wooden puzzle box, 6 inches on a side, carved with silhouettes of leering clown faces. The box rattles when shaken. A character who spends a short rest fiddling with the box can figure out how to open it with a successful DC 20 Intelligence check. The box is empty, with nothing inside to explain the rattling.\",\n  \"A faceless doll in a wedding dress that has yellowed and frayed with age.\",\n  \"A vaguely coffin-shaped jack-in-the-box containing a pop-up Strahd puppet.\",\n  \"A spring-loaded set of wooden teeth with fangs, all painted white. The teeth gnash and chatter for 1 minute when the spring is wound tight (requiring an action) and released.\",];\n\nconst cocoonContent = [\"A wooden mannequin wearing a gown.\",\n  \"A Barovian witch (see appendix D). She screams like a wild animal and begins casting spells.\",\n  \"A Strahd zombie (see appendix D). It fights until killed.\",\n  \"A Barovian lunatic (CN male commoner). If freed, he cackles until silenced or until a calm emotions spell is cast on him. A lesser restoration spell cures his madness, at which point he tries to flee the castle.\",\n  \"A dead Barovian that serves as host to a swarm of insects (spiders). The baby giant spiders (each one the size of a tarantula) crawl out of the Barovian's gaping mouth or burst forth from its distended belly.\",\n  \"A Vistana bandit (CN male or female). The Vistana knows the castle's layout and helps the characters until Strahd or more Vistani appear, at which point the treacherous Vistana turns on the characters.\"]\n\nexport const trinkets = [\"A picture you drew as a child of your imaginary friend\",\n  \"A lock that opens when blood is deripped in its keyhole\",\n  \"Clothes stolen from a scarecrow\",\n  \"A spinning top carved with four faces: happy, sad, wrathful and dead\",\n  \"The necklace of a sibling who died on the day you were born\",\n  \"A ig from someone executed by beheading\",\n  \"The unopened letter to you from your dying father\",\n  \"A pocket watch that runs backward fro an hour every midnight\",\n  \"A winter coat stolen from a dying soldier\",\n  \"A bottle of invisible ink that can only be read at sunset\",\n  \"A wineskin that refills when interred with a dead person for a night\",\n  \"A set of silverware used by a king for his last meal\",\n  \"A spyglass that always shows the world suffering a terrible storm\",\n  \"A cameo with the profile's face scratched away\",\n  \"A lantern with a black candle that never runs out and that burns with green flame\",\n  \"A teacup from a child's tea set, stained with blood\",\n  \"A little black book that records your dreams, and yours alone, when you sleep\",\n  \"A necklace formed of the interlinked holy symbols of a dozen deities\",\n  \"A hangman's noose that feels heavier than it should\",\n  \"A birdcage into which small birds fly but once inside never eat or leave\",\n  \"A lepidopterist's box filled dead moths with skull-like patterns on their wings.\",\n  \"A jar of pickled ghouls's tongues\",\n  \"The wooden hand of a notorious pirate\",\n  \"An urn with the ashes of a dead relative\",\n  \"A hand mirror backed with a bronze depiction of a medusa\",\n  \"Pallid leather gloves crafted with ivory fingernails\",\n  \"Dice made from the knuckles of a notorious charlatan\",\n  \"A ring of keys for forgotten locks\",\n  \"Nails from the coffin of a murderer\",\n  \"A key to the family crypt\",\n  \"A bouquet of funerary flowers that always looks and smells fresh\",\n  \"A switch used to discipline you as a child\",\n  \"A music box that plays by itself whenever someone holding it dances\",\n  \"A walking cane with an iron ferule that strikes sparks on stone\",\n  \"A flag from a ship lost at sea\",\n  \"Porcelain doll's head that always seems to be looking at you\",\n  \"A wolf's head wrought in silver that is also a whistle\",\n  \"A small mirror that shows a much older version of the viewer\",\n  \"Small, worn book of children's nursery rhymes\",\n  \"A mummified raven's claw\",\n  \"A broken pendent of a silver dragon that's always cold to the touch\",\n  \"A small locked box that quietly hums a lovely melody at night but you always forget it in the morning\",\n  \"An inkwell that makes one a little nauseous when staring at it\",\n  \"An old little doll made from a dark, dense wood and missing a hand and a foot\",\n  \"A black executioner's hood\",\n  \"A pouch made of flesh, with a sinew drawstring\",\n  \"A tiny spool of black thread that never runs out\",\n  \"A tiny clockwork figuring of a dancer that's missing a gear and doesn't work\",\n  \"A black wooden pipe that creates puffs of smoke that look like skulls\",\n  \"A vial of perfume, the scene of which only certain creatures can detect.\"];\n\nexport const rahadinLocations = [\"Chapel (area Kl 5)\",\n  \"Audience hall (area K25)\",\n  \"Study (area K37)\",\n  \"Tower roof (area K57)\",\n  \"Wine cellar (area _K63)\",\n  \"Torture chamber _(area K76)\",]\n\nexport const unseenServent = [\"A tarnished silver platter with a lid (worth 25 gp). If a character comes within S feet of the servant, it lifts the lid, revealing a bunch of moldy scones. The first character to eat a scone gains inspiration. On later occurrences of this encounter, the platter holds a crawling claw that attacks the nearest character.\",\n  \"A silver goblet (worth SO gp) filled to the brim with wine. A character who drinks the wine must make a DC 15 Constitution saving throw, taking 44 (8dl0) poison damage on a failed save, or half as much damage on a successful one. On future occurrences of this encounter, the wine acts as a potion ofhealing.\",\n  \"A gold candelabrum (worth 150 gp) with three branches, each one holding an unlit candle.\",\n  \"A purple silk handkerchief with white ruffled edges (worth l gp). On future occurrences of this encounter, the handkerchief is smeared with fresh blood.\",\n  \"A crystal dinner bell (worth 25 gp). The unseen servant rings the bell if the characters come within 10 feet of it. The sound attracts ld4 hungry vampire spawn (see below), which arrive in ld4 + l rounds.\",\n  \"A wizard's spellbook with a black velvet dust jacket over its stitched leather cover. The book contains all the spells Strahd has prepared (see appendix D). On subsequent occurrences of this encounter, the tome is a nonmagical leather-bound storybook worth 25 gp.\",]\n\nexport const randomUnseenServant = () => {\n  const n = random(0, unseenServent.length - 1);\n  return unseenServent[n];\n}\n\nexport const randomRahadinLocation = () => {\n  const n = random(0, rahadinLocations.length - 1);\n  return rahadinLocations[n];\n}\n\nexport const randomTrinket = () => {\n  const n = random(0, trinkets.length - 1);\n  return trinkets[n];\n}\n\nexport const randomCocoonContent = () => {\n  const n = random(0, cocoonContent.length - 1);\n  return cocoonContent[n];\n}\n\nexport const randomBlinkyToy = () => {\n  return blinkToys[random(0, blinkToys.length - 1)];\n}\n","import { Autocomplete, Button, Grid, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField } from \"@mui/material\";\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\nimport { StyledTableCell, StyledTableRow } from \"../components/Table\";\nimport { calculateAdjustedXP, getXPDifficultyForLevel, XPDificulty } from \"./EncountersGenerator\";\nimport { getMonsterDataFor, IMonsterData, monsterData } from \"./Monsters\";\n\n//https://blackcitadelrpg.com/challenge-rating-5e/\nconst CreateEncounter = () => {\n\n  const [monsterAutocompleteValue, setMonsterAutocompleteValue] = useState<IMonsterData>();\n  const [monsters, setMonsters] = useState<IMonsterData[]>([]);\n  const [finalXP, setFinalXP] = useState(0);\n  const [recommendedCombatXP, setRecommendedCombatXP] = useState<any>({});\n  const [partyLevels, setPartyLevels] = useState(\"3,3,3\");\n\n\n  useEffect(() => calculateXP(), [monsters])\n  useEffect(() => {\n    try {\n      let difficulties = { 0: 0, 1: 0, 2: 0, 3: 0 };\n      partyLevels.split(\",\").forEach(l => {\n        const xps = getXPDifficultyForLevel(parseInt(l));\n        difficulties[XPDificulty.EASY] += xps[XPDificulty.EASY]\n        difficulties[XPDificulty.MEDIUM] += xps[XPDificulty.MEDIUM]\n        difficulties[XPDificulty.HARD] += xps[XPDificulty.HARD]\n        difficulties[XPDificulty.DEADLY] += xps[XPDificulty.DEADLY]\n      });\n\n      setRecommendedCombatXP(difficulties);\n    }\n    catch (ex) {\n      console.log(ex)\n    }\n  }, [partyLevels]);\n\n  const onAutoCompleteChange = (event: SyntheticEvent, value: any) => setMonsterAutocompleteValue(value as IMonsterData)\n  const onPartyLevelsChange = (e: React.ChangeEvent<HTMLInputElement>) => setPartyLevels(e.target.value);\n\n  const SearchMonsterBox = () => {\n    return (\n      <Autocomplete\n        onChange={onAutoCompleteChange}\n        options={monsterData}\n        fullWidth\n        getOptionLabel={option => `${option.type} (${option.xp} XP)`}\n        renderInput={(params) => <TextField {...params} label=\"Add Monster\" />}\n        value={monsterAutocompleteValue}\n      />\n    );\n  }\n\n  const calculateXP = () => setFinalXP(calculateAdjustedXP(monsters))\n  const difficulty = () => {\n    let diff = \"\";\n    if (finalXP >= recommendedCombatXP[XPDificulty.DEADLY])\n      diff = \"Deadly\";\n    else if (finalXP >= recommendedCombatXP[XPDificulty.HARD])\n      diff = \"Hard\";\n    else if (finalXP >= recommendedCombatXP[XPDificulty.MEDIUM])\n      diff = \"MEDIUM\";\n    else if (finalXP >= recommendedCombatXP[XPDificulty.EASY])\n      diff = \"EASY\";\n\n    return diff;\n  }\n\n\n  const onMonsterAddClick = () => {\n    if (monsterAutocompleteValue) {\n      const m = getMonsterDataFor(monsterAutocompleteValue!);\n      setMonsters([m, ...monsters])\n    }\n  }\n\n  return <div>\n    <Grid container spacing={2}>\n      <Grid item xs={8}>\n        <div style={{ display: \"flex\" }}>\n          <SearchMonsterBox />\n          <Button onClick={onMonsterAddClick} variant=\"contained\">Add</Button>\n        </div>\n\n        Combat XP: {finalXP} {difficulty()}\n\n        <TableContainer component={Paper}>\n          <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Type</StyledTableCell>\n                <StyledTableCell>XP</StyledTableCell>\n                <StyledTableCell>HP</StyledTableCell>\n                <StyledTableCell>Reference</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {\n                monsters.map(m => {\n                  return <StyledTableRow >\n                    <StyledTableCell scope=\"row\">{m.type}</StyledTableCell>\n                    <StyledTableCell scope=\"row\">{m.xp}</StyledTableCell>\n                    <StyledTableCell scope=\"row\">{m.hp}</StyledTableCell>\n                    <StyledTableCell scope=\"row\"><a href={m.reference} target=\"_blank\" rel=\"noreferrer\">Open Stats</a></StyledTableCell>\n                  </StyledTableRow>\n                })\n              }\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n      <Grid item xs={4}>\n        <div>Comma seperated char levels</div>\n        <TextField value={partyLevels} fullWidth onChange={onPartyLevelsChange} />\n\n        <h2>Recommended Combat XP</h2>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Difficulty</StyledTableCell>\n                <StyledTableCell>XP</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <StyledTableRow >\n                <StyledTableCell scope=\"row\">Easy</StyledTableCell>\n                <StyledTableCell scope=\"row\">{recommendedCombatXP[XPDificulty.EASY]}</StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow >\n                <StyledTableCell scope=\"row\">Medium</StyledTableCell>\n                <StyledTableCell scope=\"row\">{recommendedCombatXP[XPDificulty.MEDIUM]}</StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow >\n                <StyledTableCell scope=\"row\">Hard</StyledTableCell>\n                <StyledTableCell scope=\"row\">{recommendedCombatXP[XPDificulty.HARD]}</StyledTableCell>\n              </StyledTableRow>\n\n              <StyledTableRow >\n                <StyledTableCell scope=\"row\">Deadly</StyledTableCell>\n                <StyledTableCell scope=\"row\">{recommendedCombatXP[XPDificulty.DEADLY]}</StyledTableCell>\n              </StyledTableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Grid>\n    </Grid>\n\n\n  </div>\n}\n\nexport default CreateEncounter;","import { Button, styled } from '@mui/material';\n\ninterface IFeatureButtonProps {\n  text: string,\n  icon: string,\n  onClick: () => void\n}\n\nconst FeatureButton = (props: IFeatureButtonProps) => {\n\n  const { text, icon, onClick } = props;\n\n  const CustomButton = styled(Button)({\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"& img\": {\n      width: \"50px\"\n    }\n  });\n\n  return (\n    <CustomButton onClick={onClick} variant=\"contained\" >\n      <img src={icon} />\n      {text}\n    </CustomButton>\n  );\n}\n\nexport default FeatureButton;\n","export default __webpack_public_path__ + \"static/media/battle.1767d2e1.png\";","export default __webpack_public_path__ + \"static/media/castle.f98ce2e2.png\";","export default __webpack_public_path__ + \"static/media/house.4d25ebc0.png\";","import { Checkbox, FormControlLabel, FormGroup, Grid, Paper, Table, TableBody, TableContainer, TableHead, TableRow, TextField, ToggleButton, ToggleButtonGroup } from '@mui/material';\nimport React, { useState } from 'react';\nimport FeatureButton from '../components/FeatureButton';\nimport { StyledTableCell, StyledTableRow } from '../components/Table';\nimport { DiceType, roll } from '../DiceRoll';\nimport BattleImage from \"../images/battle.png\";\nimport CastleImage from \"../images/castle.png\";\nimport HouseImage from \"../images/house.png\";\nimport { generateCastleRavenloftEncounter, generateDaytimeEncounter, generateNightTimeEncounter, generateVallakiHouseEncounter, generateVillageOfBaroviaHouseEncounter } from './EncountersGenerator';\nimport { IEncounterMonster } from './EncounterUtils';\n\ninterface IEncounterRow {\n  date: string;\n  roll: number;\n  day: boolean;\n  place: string;\n  details: IEncounterMonster[];\n}\n\nconst styles = {\n  paper: {\n    padding: \"30px\"\n  },\n  flex: {\n    display: \"flex\",\n  },\n  flexItem: {\n    marginRight: \"10px\"\n  }\n}\n\nconst Encounters = () => {\n\n  const [rows, setRows] = useState([] as IEncounterRow[]);\n  const [roadEncounter, setRoadEncounter] = useState(true); //false means its wild encounter\n  const [dayTimeToggle, setDayTimeToggle] = useState(true);\n  const [forceEncounter, setForceEncounter] = useState(false);\n  const roadDC = 18;\n  const wildDC = 15;\n\n\n  const outsideEncounterClick = () => {\n    const n = roll(1, DiceType.d12) + roll(1, DiceType.d8);\n    const dc = roadEncounter ? roadDC : wildDC;\n\n    let details: IEncounterMonster[];\n    if (forceEncounter || n >= dc)\n      details = dayTimeToggle ? generateDaytimeEncounter() : generateNightTimeEncounter();\n    else\n      details = [{ type: \"none\", name: `No encounter. Rolled bellow ${dc}`, hp: -1 }];\n\n    const row: IEncounterRow = { date: new Date().toUTCString(), place: roadEncounter ? \"Road\" : \"Wild\", roll: forceEncounter ? 20 : n, day: dayTimeToggle, details }\n    setRows([row, ...rows])\n  }\n\n  const baroviaVillageHouseClick = () => {\n    const n = roll(1, DiceType.d20);\n    const details = generateVillageOfBaroviaHouseEncounter(n);\n\n    const row: IEncounterRow = { date: new Date().toUTCString(), place: \"Village Of Barovia House\", roll: forceEncounter ? 20 : n, day: dayTimeToggle, details }\n    setRows([row, ...rows])\n  }\n\n  const castleRavenloftClick = () => {\n    const n = roll(1, DiceType.d12) + roll(1, DiceType.d8);\n    const details = generateCastleRavenloftEncounter(n);\n\n    const row: IEncounterRow = { date: new Date().toUTCString(), place: \"Caste Ravenloft\", roll: forceEncounter ? 20 : n, day: dayTimeToggle, details }\n    setRows([row, ...rows])\n  }\n\n  const vallakiHouseClick = () => {\n    const n = roll(1, DiceType.d20);\n    const details = generateVallakiHouseEncounter(n);\n\n    const row: IEncounterRow = { date: new Date().toUTCString(), place: \"Vallaki House\", roll: forceEncounter ? 20 : n, day: dayTimeToggle, details }\n    setRows([row, ...rows])\n  }\n\n  const onDayTimeToggle = (event: React.MouseEvent<HTMLElement>, newValue: string) => {\n    if (newValue !== null) setDayTimeToggle(newValue === \"day\");\n  };\n\n  const onRoadToggle = (event: React.MouseEvent<HTMLElement>, newValue: string) => {\n    if (newValue !== null) setRoadEncounter(newValue === \"road\");\n  };\n\n  const onForceCombatChange = () => setForceEncounter(!forceEncounter)\n\n  return (\n    <div>\n      <div style={styles.flex}>\n        <div style={styles.flexItem}><FeatureButton icon={BattleImage} text=\"Outside Encounter\" onClick={outsideEncounterClick} /></div>\n        <div style={styles.flexItem}><FeatureButton icon={HouseImage} text=\"Village of Barovia House\" onClick={baroviaVillageHouseClick} /></div>\n        <div style={styles.flexItem}><FeatureButton icon={CastleImage} text=\"Castle Ravenloft\" onClick={castleRavenloftClick} /></div>\n        <div style={styles.flexItem}><FeatureButton icon={HouseImage} text=\"Town Of Vallaki House\" onClick={vallakiHouseClick} /></div>\n      </div>\n\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Roll</StyledTableCell>\n                  <StyledTableCell>Day/Night</StyledTableCell>\n                  <StyledTableCell>Place</StyledTableCell>\n                  <StyledTableCell align=\"right\">Details</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.map((row, i) => (\n                  <StyledTableRow key={i}>\n                    <StyledTableCell scope=\"row\">{row.roll}</StyledTableCell>\n                    <StyledTableCell>{row.day ? \"Day\" : \"Night\"}</StyledTableCell>\n                    <StyledTableCell>{row.place}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {\n                        row.details.map((d, j) => {\n                          return (\n                            <div key={j} style={{ padding: \"5px\", lineHeight: \"40px\" }}>\n                              #{j + 1} - {d.name}{d.gender ? ` (${d.gender.substring(0, 1).toUpperCase()}) ` : \" \"}\n                              <a href={d.reference} target=\"_blank\" rel=\"noreferrer\"><b>{d.type}</b></a>\n                              {\n                                d.hp > 0 ? <TextField style={{ width: \"70px\", marginLeft: \"5px\" }} label=\"HP\" size=\"small\" defaultValue={d.hp} /> : \"\"\n                              }\n                            </div>\n                          )\n                        })\n                      }\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Paper style={styles.paper}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n\n                <ToggleButtonGroup value={dayTimeToggle ? \"day\" : \"night\"} exclusive onChange={onDayTimeToggle}>\n                  <ToggleButton value=\"day\">Day</ToggleButton>\n                  <ToggleButton value=\"night\" >Night</ToggleButton>\n                </ToggleButtonGroup>\n              </Grid>\n              <Grid item xs={6}> <ToggleButtonGroup value={roadEncounter ? \"road\" : \"wild\"} exclusive onChange={onRoadToggle}>\n                <ToggleButton value=\"road\">Road</ToggleButton>\n                <ToggleButton value=\"wild\" >Wild</ToggleButton>\n              </ToggleButtonGroup>\n              </Grid>\n            </Grid>\n            <FormGroup>\n              <FormControlLabel control={<Checkbox checked={forceEncounter} onChange={onForceCombatChange} />} label=\"Force Encounter\" />\n            </FormGroup>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Encounters;\n","import { random } from \"./DiceRoll\";\n\nexport const specialCards = [\"Ghost\", \"Innocent\", \"Marionette\", \"Darklord\", \"Mists\", \"Executioner\", \"Broken One\", \"Tempter\", \"Beast\", \"Donjon\", \"Raven\", \"Seer\", \"Artifact\", \"Horseman\"];\nexport const cardSuits = [\"Glyphs\", \"Swords\", \"Coins\", \"Stars\"];\n\n\nexport const getRandomCard = () => {\n  const n = random(1, 9);\n  const suit = random(0, 3);\n\n  return `${n} of ${cardSuits[suit]}`;\n}\n\nexport const getRandomHighDeckCard = () => {\n  return specialCards[random(0, specialCards.length - 1)];\n}","import { Button, Paper, Table, TableBody, TableContainer, TableHead, TableRow } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { StyledTableCell, StyledTableRow } from \"./components/Table\";\nimport { getRandomCard, getRandomHighDeckCard } from \"./TarokkaCardsUtils\";\n\nconst FortunesOfRavenloft = () => {\n\n  const [cards, setCards] = useState<string[]>([]);\n\n  useEffect(() => readFortuneClick(), [])\n\n  const readFortuneClick = () => {\n    const reading: string[] = [];\n    let card;\n\n    for (let i = 0; i < 3; i++) {\n      do {\n        card = getRandomCard();\n      } while (reading.includes(card))\n      reading.push(card)\n    }\n\n    for (let i = 0; i < 2; i++) {\n      do {\n        card = getRandomHighDeckCard();\n      } while (reading.includes(card))\n      reading.push(card)\n    }\n\n    setCards(reading);\n  }\n\n  return (\n    <div style={{ maxWidth: \"400px\", margin: \"auto\" }}>\n      <TableContainer component={Paper} sx={{ maxWidth: \"400px\" }}>\n        <Table >\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>What</StyledTableCell>\n              <StyledTableCell>Card</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n\n            <StyledTableRow>\n              <StyledTableCell>The Tome Of Strahd</StyledTableCell>\n              <StyledTableCell>{cards[0]}</StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell>The Holy Symbol of Ravenkind</StyledTableCell>\n              <StyledTableCell>{cards[1]}</StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell>The Sunsword</StyledTableCell>\n              <StyledTableCell>{cards[2]}</StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell>Strahd's Enemy</StyledTableCell>\n              <StyledTableCell>{cards[3]}</StyledTableCell>\n            </StyledTableRow>\n\n            <StyledTableRow>\n              <StyledTableCell>Strahd</StyledTableCell>\n              <StyledTableCell>{cards[4]}</StyledTableCell>\n            </StyledTableRow>\n\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div style={{ textAlign: \"center\" }}>\n        <Button variant=\"contained\" onClick={readFortuneClick}>Read Fortune Again</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default FortunesOfRavenloft;\n","import { Button, Checkbox, FormControl, Grid, InputLabel, MenuItem, Paper, Select, SelectChangeEvent, Slider, Table, TableBody, TableContainer, TableHead, TableRow } from '@mui/material';\nimport React, { useState } from 'react';\nimport { StyledTableCell, StyledTableRow } from '../components/Table';\nimport { generateBarovianFamily, generateFemaleBarovian, generateMaleBarovian } from '../encounters/EncountersGenerator';\nimport { IEncounterMonster } from '../encounters/EncounterUtils';\n\nconst Names = () => {\n\n  const styles = {\n    papper: {\n      padding: \"40px\"\n    }\n  }\n\n  const [maleNameCount, setMaleNameCount] = useState(0);\n  const [femaleNameCount, setFemaleNameCount] = useState(0);\n  const [sameFamily, setSameFamily] = useState(false);\n  const [names, setNames] = useState<IEncounterMonster[]>([]);\n  const [nameType, setNameType] = useState(\"barovian\");\n\n  const maleCountChange = (event: Event, newValue: number | number[]) => setMaleNameCount(newValue as number);\n  const femaleCountChange = (event: Event, newValue: number | number[]) => setFemaleNameCount(newValue as number);\n  const onSameFamilyToggle = (event: React.ChangeEvent<HTMLInputElement>) => setSameFamily(event.target.checked);\n  const onNameTypeChange = (event: SelectChangeEvent) => setNameType(event.target.value as string);\n\n  const updateNames = () => {\n    let newNames = [];\n    if (sameFamily)\n      newNames = generateBarovianFamily(maleNameCount, femaleNameCount)\n    else {\n      for (let i = 0; i < maleNameCount; i++) newNames.push(generateMaleBarovian()[0]);\n      for (let i = 0; i < femaleNameCount; i++) newNames.push(generateFemaleBarovian()[0]);\n    }\n\n    setNames([...newNames, ...names]);\n  }\n\n  return (\n    <div >\n      <Grid container spacing={2}>\n        <Grid item xs={8}>\n          <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\n              <TableHead>\n                <TableRow>\n                  <StyledTableCell>Name</StyledTableCell>\n                  <StyledTableCell>Gender</StyledTableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {names.map((entry: any, index: number) => (\n                  <StyledTableRow key={index}>\n                    <StyledTableCell>{entry.name}</StyledTableCell>\n                    <StyledTableCell>{entry.gender}</StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={4}>\n          <Paper style={styles.papper}>\n            <FormControl fullWidth style={{ marginBottom: \"20px\" }}>\n              <InputLabel id=\"name-type-label\">Name Type</InputLabel>\n              <Select labelId=\"name-type-label\" value={nameType} label=\"Name Type\" onChange={onNameTypeChange} >\n                <MenuItem value={nameType}>Barovian Commoner</MenuItem>\n              </Select>\n            </FormControl>\n\n            Man <Slider defaultValue={maleNameCount} onChange={maleCountChange} step={1} valueLabelDisplay=\"auto\" max={30} />\n            Woman <Slider defaultValue={femaleNameCount} onChange={femaleCountChange} step={1} valueLabelDisplay=\"auto\" max={30} />\n\n            Same Family <Checkbox checked={sameFamily} onChange={onSameFamilyToggle} />\n\n            <Button variant=\"contained\" onClick={updateNames}>Generate</Button>\n          </Paper>\n\n        </Grid>\n      </Grid >\n    </div >\n  );\n}\n\nexport default Names;\n","import { Box, Tab, Tabs } from '@mui/material';\nimport React, { useEffect } from 'react';\nimport { TabPanel } from './components/TabPanel';\nimport CreateEncounter from './encounters/CreateEncounter';\nimport Encounters from './encounters/Encounters';\nimport FortunesOfRavenloft from './FortunesOfRavenloft';\nimport Names from './names/Names';\n\nconst App = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => setValue(newValue);\n\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", (evt) => {\n      evt.preventDefault();\n      return evt.returnValue = 'Are you sure you want to close?';\n    });\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n          <Tab label=\"Encounter Generator\" />\n          <Tab label=\"Name Generator\" />\n          <Tab label=\"Fortunes Of Ravenloft\" />\n          <Tab label=\"Create Encounter\" />\n        </Tabs>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <Encounters />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Names />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <FortunesOfRavenloft />\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n        <CreateEncounter />\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}